//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CicPortal.CuePortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PeerReviewersPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal")]
    public partial class PeerReviewersPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnInsertTechnicalCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertTechnicalCommentsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPeerAccountCreationsDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertAuditExitReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertAuditLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitEmailAuditEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendCueAuditRatingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerAuditRatingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendTechnicalInspectionVouchersToCUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStaffClaimApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCollaborationPeerCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPAPeerCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateAssReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPAPeerComponentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPAPeerComponentsEachOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPAPeerCommentsEachOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateSiteAssReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPASiteComponentCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveCollaborationSiteComponentCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveOverallCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveOverallCommentCurriculumOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCollaborationSiteComponentCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSavePASiteComponentCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataClerkEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataCancelClerkEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback VcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataclerkfinalvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DvcfinalvcApprovalEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountCreationEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUseraccountCreationEmailRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUserHelpEmaiRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovalStatusDataCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnuseraccountcreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback PortalResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProgrammeFeedbackVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateProgrammeEvaluationTooolOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewWorkOrderEmailAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAccreditationPaymentsAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAccreditationAlertsToUniversityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateExitReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitUniversityAccreditationFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitInstitutionAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUniversityFeedbackCommentsEmailAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPeerReviewerJobIAOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPeerReviewerJobPQOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPeerReviewerJobIQOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerReviewersEvaluation1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgrammeAccCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCollaborationCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPeerReviewersEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetVendornNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendProgramApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectProgramRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalProgramRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEvaluationHeaderCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesComposition1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPeerReviewerJobVROperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPeerReviewerJobCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPeerReviewerJobPAOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPeerReviewerJobIAOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPeerReviewerJobPQOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPeerReviewerJobIQOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPeerReviewerJobCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPeerReviewerJobVFOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptPeerReviewerJobPAOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramAccreditationAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgramApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPeerFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitPeerFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendCueWorkorderRatingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerWorkorderRatingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitApplicationCUEOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendCUEWorkOrderApplicationEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPeerWorkOrderApplicationEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPeerAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeletePeerAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditPeerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddCollaborationVerificationEvaluationAndSiteLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddCollaborationEvaluationAndSiteLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddProgrammeEvaluationAndSiteLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdminSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVerdictDateCollaborationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVerdictDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopentaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForProgramAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendEmailPeerAccountCreationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePeerEmploymentRecordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PeerReviewersPortal() {
            this.Url = global::CicPortal.Properties.Settings.Default.CicPortal_CuePortal_PeerReviewersPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnInsertTechnicalCommentsCompletedEventHandler FnInsertTechnicalCommentsCompleted;
        
        /// <remarks/>
        public event FnInsertTechnicalCommentsLinesCompletedEventHandler FnInsertTechnicalCommentsLinesCompleted;
        
        /// <remarks/>
        public event FnInsertPeerAccountCreationsDocsCompletedEventHandler FnInsertPeerAccountCreationsDocsCompleted;
        
        /// <remarks/>
        public event FnInsertAuditExitReportCompletedEventHandler FnInsertAuditExitReportCompleted;
        
        /// <remarks/>
        public event FnInsertAuditLinesCompletedEventHandler FnInsertAuditLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitEmailAuditEvaluationCompletedEventHandler FnSubmitEmailAuditEvaluationCompleted;
        
        /// <remarks/>
        public event FnSendCueAuditRatingEmailCompletedEventHandler FnSendCueAuditRatingEmailCompleted;
        
        /// <remarks/>
        public event FnSendPeerAuditRatingEmailCompletedEventHandler FnSendPeerAuditRatingEmailCompleted;
        
        /// <remarks/>
        public event FnSendTechnicalInspectionVouchersToCUECompletedEventHandler FnSendTechnicalInspectionVouchersToCUECompleted;
        
        /// <remarks/>
        public event SendStaffClaimApprovalCompletedEventHandler SendStaffClaimApprovalCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimCompletedEventHandler CreateStaffClaimCompleted;
        
        /// <remarks/>
        public event DeleteStaffClaimLineCompletedEventHandler DeleteStaffClaimLineCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimLineCompletedEventHandler CreateStaffClaimLineCompleted;
        
        /// <remarks/>
        public event EditStaffClaimLineCompletedEventHandler EditStaffClaimLineCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event FnGetCollaborationPeerCommentsCompletedEventHandler FnGetCollaborationPeerCommentsCompleted;
        
        /// <remarks/>
        public event FnGetPAPeerCommentsCompletedEventHandler FnGetPAPeerCommentsCompleted;
        
        /// <remarks/>
        public event FnGenerateAssReportCompletedEventHandler FnGenerateAssReportCompleted;
        
        /// <remarks/>
        public event FnGetPAPeerComponentsCompletedEventHandler FnGetPAPeerComponentsCompleted;
        
        /// <remarks/>
        public event FnGetPAPeerComponentsEachCompletedEventHandler FnGetPAPeerComponentsEachCompleted;
        
        /// <remarks/>
        public event FnGetPAPeerCommentsEachCompletedEventHandler FnGetPAPeerCommentsEachCompleted;
        
        /// <remarks/>
        public event FnGenerateSiteAssReportCompletedEventHandler FnGenerateSiteAssReportCompleted;
        
        /// <remarks/>
        public event FnGetPASiteComponentCommentsCompletedEventHandler FnGetPASiteComponentCommentsCompleted;
        
        /// <remarks/>
        public event FnSaveCollaborationSiteComponentCommentsCompletedEventHandler FnSaveCollaborationSiteComponentCommentsCompleted;
        
        /// <remarks/>
        public event FnSaveOverallCommentCompletedEventHandler FnSaveOverallCommentCompleted;
        
        /// <remarks/>
        public event FnSaveOverallCommentCurriculumCompletedEventHandler FnSaveOverallCommentCurriculumCompleted;
        
        /// <remarks/>
        public event FnGetCollaborationSiteComponentCommentsCompletedEventHandler FnGetCollaborationSiteComponentCommentsCompleted;
        
        /// <remarks/>
        public event FnSavePASiteComponentCommentsCompletedEventHandler FnSavePASiteComponentCommentsCompleted;
        
        /// <remarks/>
        public event DataClerkEmailRequestCompletedEventHandler DataClerkEmailRequestCompleted;
        
        /// <remarks/>
        public event DataCancelClerkEmailRequestCompletedEventHandler DataCancelClerkEmailRequestCompleted;
        
        /// <remarks/>
        public event DvcApprovalEmailRequestCompletedEventHandler DvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event VcApprovalEmailRequestCompletedEventHandler VcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event DataclerkfinalvcApprovalEmailRequestCompletedEventHandler DataclerkfinalvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event DvcfinalvcApprovalEmailRequestCompletedEventHandler DvcfinalvcApprovalEmailRequestCompleted;
        
        /// <remarks/>
        public event AccountCreationEmailRequestCompletedEventHandler AccountCreationEmailRequestCompleted;
        
        /// <remarks/>
        public event FnUseraccountCreationEmailRequestCompletedEventHandler FnUseraccountCreationEmailRequestCompleted;
        
        /// <remarks/>
        public event FnUserHelpEmaiRequestCompletedEventHandler FnUserHelpEmaiRequestCompleted;
        
        /// <remarks/>
        public event ApprovalStatusDataCollectionCompletedEventHandler ApprovalStatusDataCollectionCompleted;
        
        /// <remarks/>
        public event FnuseraccountcreationCompletedEventHandler FnuseraccountcreationCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event PortalResetPasswordCompletedEventHandler PortalResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FnGenerateProgrammeFeedbackVoucherCompletedEventHandler FnGenerateProgrammeFeedbackVoucherCompleted;
        
        /// <remarks/>
        public event FnGenerateProgrammeEvaluationTooolCompletedEventHandler FnGenerateProgrammeEvaluationTooolCompleted;
        
        /// <remarks/>
        public event FnNewWorkOrderEmailAlertCompletedEventHandler FnNewWorkOrderEmailAlertCompleted;
        
        /// <remarks/>
        public event FnAccreditationPaymentsAlertsCompletedEventHandler FnAccreditationPaymentsAlertsCompleted;
        
        /// <remarks/>
        public event FnAccreditationAlertsToUniversityCompletedEventHandler FnAccreditationAlertsToUniversityCompleted;
        
        /// <remarks/>
        public event FnGenerateExitReportCompletedEventHandler FnGenerateExitReportCompleted;
        
        /// <remarks/>
        public event FnSubmitUniversityAccreditationFeedbackCompletedEventHandler FnSubmitUniversityAccreditationFeedbackCompleted;
        
        /// <remarks/>
        public event FnSubmitInstitutionAccreditationCompletedEventHandler FnSubmitInstitutionAccreditationCompleted;
        
        /// <remarks/>
        public event FnUniversityFeedbackCommentsEmailAlertCompletedEventHandler FnUniversityFeedbackCommentsEmailAlertCompleted;
        
        /// <remarks/>
        public event AcceptPeerReviewerJobIACompletedEventHandler AcceptPeerReviewerJobIACompleted;
        
        /// <remarks/>
        public event AcceptPeerReviewerJobPQCompletedEventHandler AcceptPeerReviewerJobPQCompleted;
        
        /// <remarks/>
        public event AcceptPeerReviewerJobIQCompletedEventHandler AcceptPeerReviewerJobIQCompleted;
        
        /// <remarks/>
        public event AddPeerReviewersEvaluation1CompletedEventHandler AddPeerReviewersEvaluation1Completed;
        
        /// <remarks/>
        public event AddProgrammeAccCommentsCompletedEventHandler AddProgrammeAccCommentsCompleted;
        
        /// <remarks/>
        public event AddCollaborationCommentsCompletedEventHandler AddCollaborationCommentsCompleted;
        
        /// <remarks/>
        public event FnEditPeerReviewersEvaluationCompletedEventHandler FnEditPeerReviewersEvaluationCompleted;
        
        /// <remarks/>
        public event FnSendPeerApprovalRequestCompletedEventHandler FnSendPeerApprovalRequestCompleted;
        
        /// <remarks/>
        public event FnRegisterPeerReviewerCompletedEventHandler FnRegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event FnGetVendornNumberCompletedEventHandler FnGetVendornNumberCompleted;
        
        /// <remarks/>
        public event FnInsertBlogCompletedEventHandler FnInsertBlogCompleted;
        
        /// <remarks/>
        public event FnInsertBlogReplyCompletedEventHandler FnInsertBlogReplyCompleted;
        
        /// <remarks/>
        public event SendApprovalRequestCompletedEventHandler SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event SendProgramApprovalRequestCompletedEventHandler SendProgramApprovalRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectRequestCompletedEventHandler ApproveRejectRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectProgramRequestCompletedEventHandler ApproveRejectProgramRequestCompleted;
        
        /// <remarks/>
        public event CancelApprovalProgramRequestCompletedEventHandler CancelApprovalProgramRequestCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event CancelApprovalRequestCompletedEventHandler CancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event AddEvaluationHeaderCommentsCompletedEventHandler AddEvaluationHeaderCommentsCompleted;
        
        /// <remarks/>
        public event AddSARCommitteesComposition1CompletedEventHandler AddSARCommitteesComposition1Completed;
        
        /// <remarks/>
        public event AddSARCommitteesCompositionCompletedEventHandler AddSARCommitteesCompositionCompleted;
        
        /// <remarks/>
        public event RejectPeerReviewerJobVRCompletedEventHandler RejectPeerReviewerJobVRCompleted;
        
        /// <remarks/>
        public event RejectPeerReviewerJobCDCompletedEventHandler RejectPeerReviewerJobCDCompleted;
        
        /// <remarks/>
        public event RejectPeerReviewerJobPACompletedEventHandler RejectPeerReviewerJobPACompleted;
        
        /// <remarks/>
        public event RejectPeerReviewerJobIACompletedEventHandler RejectPeerReviewerJobIACompleted;
        
        /// <remarks/>
        public event RejectPeerReviewerJobPQCompletedEventHandler RejectPeerReviewerJobPQCompleted;
        
        /// <remarks/>
        public event RejectPeerReviewerJobIQCompletedEventHandler RejectPeerReviewerJobIQCompleted;
        
        /// <remarks/>
        public event AcceptPeerReviewerJobCDCompletedEventHandler AcceptPeerReviewerJobCDCompleted;
        
        /// <remarks/>
        public event AcceptPeerReviewerJobVFCompletedEventHandler AcceptPeerReviewerJobVFCompleted;
        
        /// <remarks/>
        public event AcceptPeerReviewerJobPACompletedEventHandler AcceptPeerReviewerJobPACompleted;
        
        /// <remarks/>
        public event ProgramAccreditationAlertCompletedEventHandler ProgramAccreditationAlertCompleted;
        
        /// <remarks/>
        public event GetProgramApplicationNumberCompletedEventHandler GetProgramApplicationNumberCompleted;
        
        /// <remarks/>
        public event FnSubmitPeerFeedbackCompletedEventHandler FnSubmitPeerFeedbackCompleted;
        
        /// <remarks/>
        public event FnSubmitPeerFeedbackLinesCompletedEventHandler FnSubmitPeerFeedbackLinesCompleted;
        
        /// <remarks/>
        public event FnSendCueWorkorderRatingEmailCompletedEventHandler FnSendCueWorkorderRatingEmailCompleted;
        
        /// <remarks/>
        public event FnSendPeerWorkorderRatingEmailCompletedEventHandler FnSendPeerWorkorderRatingEmailCompleted;
        
        /// <remarks/>
        public event FnSubmitApplicationCUECompletedEventHandler FnSubmitApplicationCUECompleted;
        
        /// <remarks/>
        public event FnSendCUEWorkOrderApplicationEmailCompletedEventHandler FnSendCUEWorkOrderApplicationEmailCompleted;
        
        /// <remarks/>
        public event FnSendPeerWorkOrderApplicationEmailCompletedEventHandler FnSendPeerWorkOrderApplicationEmailCompleted;
        
        /// <remarks/>
        public event FnEditPeerAcademicQualificationsCompletedEventHandler FnEditPeerAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event FnDeletePeerAcademicQualificationsCompletedEventHandler FnDeletePeerAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event FnEditPeerCompletedEventHandler FnEditPeerCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentCompletedEventHandler ConfirmPaymentCompleted;
        
        /// <remarks/>
        public event FnAddCollaborationVerificationEvaluationAndSiteLinesCompletedEventHandler FnAddCollaborationVerificationEvaluationAndSiteLinesCompleted;
        
        /// <remarks/>
        public event FnAddCollaborationEvaluationAndSiteLinesCompletedEventHandler FnAddCollaborationEvaluationAndSiteLinesCompleted;
        
        /// <remarks/>
        public event FnAddProgrammeEvaluationAndSiteLinesCompletedEventHandler FnAddProgrammeEvaluationAndSiteLinesCompleted;
        
        /// <remarks/>
        public event ProgramConfirmPaymentCompletedEventHandler ProgramConfirmPaymentCompleted;
        
        /// <remarks/>
        public event ApproveCompletedEventHandler ApproveCompleted;
        
        /// <remarks/>
        public event AddAdminSpaceCompletedEventHandler AddAdminSpaceCompleted;
        
        /// <remarks/>
        public event ApplyForAccreditationCompletedEventHandler ApplyForAccreditationCompleted;
        
        /// <remarks/>
        public event AddVerdictDateCollaborationCompletedEventHandler AddVerdictDateCollaborationCompleted;
        
        /// <remarks/>
        public event AddVerdictDateCompletedEventHandler AddVerdictDateCompleted;
        
        /// <remarks/>
        public event ReopentaskCompletedEventHandler ReopentaskCompleted;
        
        /// <remarks/>
        public event ApplyForProgramAccreditationCompletedEventHandler ApplyForProgramAccreditationCompleted;
        
        /// <remarks/>
        public event AddAcademicStaffCompletedEventHandler AddAcademicStaffCompleted;
        
        /// <remarks/>
        public event AddFinancialSubmissionCompletedEventHandler AddFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event DeleteFinancialSubmissionCompletedEventHandler DeleteFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event RegisterPeerReviewerCompletedEventHandler RegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerCompletedEventHandler UpdatePeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerPasswordCompletedEventHandler UpdatePeerReviewerPasswordCompleted;
        
        /// <remarks/>
        public event AddPeerAcademicQualificationsCompletedEventHandler AddPeerAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddPeerEmploymentRecordCompletedEventHandler AddPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event EditPeerEmploymentRecordCompletedEventHandler EditPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event FnSendEmailPeerAccountCreationCompletedEventHandler FnSendEmailPeerAccountCreationCompleted;
        
        /// <remarks/>
        public event DeletePeerEmploymentRecordCompletedEventHandler DeletePeerEmploymentRecordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertTechnicalComm" +
            "ents", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertTechnicalComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertTechnicalComments(string techno, string vendno, string applicationNo, int usertype) {
            object[] results = this.Invoke("FnInsertTechnicalComments", new object[] {
                        techno,
                        vendno,
                        applicationNo,
                        usertype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertTechnicalCommentsAsync(string techno, string vendno, string applicationNo, int usertype) {
            this.FnInsertTechnicalCommentsAsync(techno, vendno, applicationNo, usertype, null);
        }
        
        /// <remarks/>
        public void FnInsertTechnicalCommentsAsync(string techno, string vendno, string applicationNo, int usertype, object userState) {
            if ((this.FnInsertTechnicalCommentsOperationCompleted == null)) {
                this.FnInsertTechnicalCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTechnicalCommentsOperationCompleted);
            }
            this.InvokeAsync("FnInsertTechnicalComments", new object[] {
                        techno,
                        vendno,
                        applicationNo,
                        usertype}, this.FnInsertTechnicalCommentsOperationCompleted, userState);
        }
        
        private void OnFnInsertTechnicalCommentsOperationCompleted(object arg) {
            if ((this.FnInsertTechnicalCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTechnicalCommentsCompleted(this, new FnInsertTechnicalCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertTechnicalComm" +
            "entsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertTechnicalCommentsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertTechnicalCommentsLines(string headerno, string chaptercode, string topiccode, string observation, string recommendation) {
            object[] results = this.Invoke("FnInsertTechnicalCommentsLines", new object[] {
                        headerno,
                        chaptercode,
                        topiccode,
                        observation,
                        recommendation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertTechnicalCommentsLinesAsync(string headerno, string chaptercode, string topiccode, string observation, string recommendation) {
            this.FnInsertTechnicalCommentsLinesAsync(headerno, chaptercode, topiccode, observation, recommendation, null);
        }
        
        /// <remarks/>
        public void FnInsertTechnicalCommentsLinesAsync(string headerno, string chaptercode, string topiccode, string observation, string recommendation, object userState) {
            if ((this.FnInsertTechnicalCommentsLinesOperationCompleted == null)) {
                this.FnInsertTechnicalCommentsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertTechnicalCommentsLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertTechnicalCommentsLines", new object[] {
                        headerno,
                        chaptercode,
                        topiccode,
                        observation,
                        recommendation}, this.FnInsertTechnicalCommentsLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertTechnicalCommentsLinesOperationCompleted(object arg) {
            if ((this.FnInsertTechnicalCommentsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertTechnicalCommentsLinesCompleted(this, new FnInsertTechnicalCommentsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertPeerAccountCr" +
            "eationsDocs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertPeerAccountCreationsDocs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPeerAccountCreationsDocs(string contactno, bool kra, bool helb, bool cid, bool eacc, bool crb, bool pBody) {
            object[] results = this.Invoke("FnInsertPeerAccountCreationsDocs", new object[] {
                        contactno,
                        kra,
                        helb,
                        cid,
                        eacc,
                        crb,
                        pBody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPeerAccountCreationsDocsAsync(string contactno, bool kra, bool helb, bool cid, bool eacc, bool crb, bool pBody) {
            this.FnInsertPeerAccountCreationsDocsAsync(contactno, kra, helb, cid, eacc, crb, pBody, null);
        }
        
        /// <remarks/>
        public void FnInsertPeerAccountCreationsDocsAsync(string contactno, bool kra, bool helb, bool cid, bool eacc, bool crb, bool pBody, object userState) {
            if ((this.FnInsertPeerAccountCreationsDocsOperationCompleted == null)) {
                this.FnInsertPeerAccountCreationsDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPeerAccountCreationsDocsOperationCompleted);
            }
            this.InvokeAsync("FnInsertPeerAccountCreationsDocs", new object[] {
                        contactno,
                        kra,
                        helb,
                        cid,
                        eacc,
                        crb,
                        pBody}, this.FnInsertPeerAccountCreationsDocsOperationCompleted, userState);
        }
        
        private void OnFnInsertPeerAccountCreationsDocsOperationCompleted(object arg) {
            if ((this.FnInsertPeerAccountCreationsDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPeerAccountCreationsDocsCompleted(this, new FnInsertPeerAccountCreationsDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertAuditExitRepo" +
            "rt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertAuditExitReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertAuditExitReport(string auditno, string resourceno, string projectno) {
            object[] results = this.Invoke("FnInsertAuditExitReport", new object[] {
                        auditno,
                        resourceno,
                        projectno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertAuditExitReportAsync(string auditno, string resourceno, string projectno) {
            this.FnInsertAuditExitReportAsync(auditno, resourceno, projectno, null);
        }
        
        /// <remarks/>
        public void FnInsertAuditExitReportAsync(string auditno, string resourceno, string projectno, object userState) {
            if ((this.FnInsertAuditExitReportOperationCompleted == null)) {
                this.FnInsertAuditExitReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertAuditExitReportOperationCompleted);
            }
            this.InvokeAsync("FnInsertAuditExitReport", new object[] {
                        auditno,
                        resourceno,
                        projectno}, this.FnInsertAuditExitReportOperationCompleted, userState);
        }
        
        private void OnFnInsertAuditExitReportOperationCompleted(object arg) {
            if ((this.FnInsertAuditExitReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertAuditExitReportCompleted(this, new FnInsertAuditExitReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertAuditLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertAuditLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertAuditLines(string auditno, string sectioncode, string findings, string stregth, string weakness, string recommendation) {
            object[] results = this.Invoke("FnInsertAuditLines", new object[] {
                        auditno,
                        sectioncode,
                        findings,
                        stregth,
                        weakness,
                        recommendation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertAuditLinesAsync(string auditno, string sectioncode, string findings, string stregth, string weakness, string recommendation) {
            this.FnInsertAuditLinesAsync(auditno, sectioncode, findings, stregth, weakness, recommendation, null);
        }
        
        /// <remarks/>
        public void FnInsertAuditLinesAsync(string auditno, string sectioncode, string findings, string stregth, string weakness, string recommendation, object userState) {
            if ((this.FnInsertAuditLinesOperationCompleted == null)) {
                this.FnInsertAuditLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertAuditLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertAuditLines", new object[] {
                        auditno,
                        sectioncode,
                        findings,
                        stregth,
                        weakness,
                        recommendation}, this.FnInsertAuditLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertAuditLinesOperationCompleted(object arg) {
            if ((this.FnInsertAuditLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertAuditLinesCompleted(this, new FnInsertAuditLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSubmitEmailAuditEva" +
            "luation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSubmitEmailAuditEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitEmailAuditEvaluation(string auditno) {
            object[] results = this.Invoke("FnSubmitEmailAuditEvaluation", new object[] {
                        auditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitEmailAuditEvaluationAsync(string auditno) {
            this.FnSubmitEmailAuditEvaluationAsync(auditno, null);
        }
        
        /// <remarks/>
        public void FnSubmitEmailAuditEvaluationAsync(string auditno, object userState) {
            if ((this.FnSubmitEmailAuditEvaluationOperationCompleted == null)) {
                this.FnSubmitEmailAuditEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitEmailAuditEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitEmailAuditEvaluation", new object[] {
                        auditno}, this.FnSubmitEmailAuditEvaluationOperationCompleted, userState);
        }
        
        private void OnFnSubmitEmailAuditEvaluationOperationCompleted(object arg) {
            if ((this.FnSubmitEmailAuditEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitEmailAuditEvaluationCompleted(this, new FnSubmitEmailAuditEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendCueAuditRatingE" +
            "mail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendCueAuditRatingEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendCueAuditRatingEmail(string auditno) {
            object[] results = this.Invoke("FnSendCueAuditRatingEmail", new object[] {
                        auditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendCueAuditRatingEmailAsync(string auditno) {
            this.FnSendCueAuditRatingEmailAsync(auditno, null);
        }
        
        /// <remarks/>
        public void FnSendCueAuditRatingEmailAsync(string auditno, object userState) {
            if ((this.FnSendCueAuditRatingEmailOperationCompleted == null)) {
                this.FnSendCueAuditRatingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendCueAuditRatingEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendCueAuditRatingEmail", new object[] {
                        auditno}, this.FnSendCueAuditRatingEmailOperationCompleted, userState);
        }
        
        private void OnFnSendCueAuditRatingEmailOperationCompleted(object arg) {
            if ((this.FnSendCueAuditRatingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendCueAuditRatingEmailCompleted(this, new FnSendCueAuditRatingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendPeerAuditRating" +
            "Email", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendPeerAuditRatingEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerAuditRatingEmail(string auditno) {
            object[] results = this.Invoke("FnSendPeerAuditRatingEmail", new object[] {
                        auditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerAuditRatingEmailAsync(string auditno) {
            this.FnSendPeerAuditRatingEmailAsync(auditno, null);
        }
        
        /// <remarks/>
        public void FnSendPeerAuditRatingEmailAsync(string auditno, object userState) {
            if ((this.FnSendPeerAuditRatingEmailOperationCompleted == null)) {
                this.FnSendPeerAuditRatingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerAuditRatingEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerAuditRatingEmail", new object[] {
                        auditno}, this.FnSendPeerAuditRatingEmailOperationCompleted, userState);
        }
        
        private void OnFnSendPeerAuditRatingEmailOperationCompleted(object arg) {
            if ((this.FnSendPeerAuditRatingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerAuditRatingEmailCompleted(this, new FnSendPeerAuditRatingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendTechnicalInspec" +
            "tionVouchersToCUE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendTechnicalInspectionVouchersToCUE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendTechnicalInspectionVouchersToCUE(string docNo, string peerCode) {
            object[] results = this.Invoke("FnSendTechnicalInspectionVouchersToCUE", new object[] {
                        docNo,
                        peerCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendTechnicalInspectionVouchersToCUEAsync(string docNo, string peerCode) {
            this.FnSendTechnicalInspectionVouchersToCUEAsync(docNo, peerCode, null);
        }
        
        /// <remarks/>
        public void FnSendTechnicalInspectionVouchersToCUEAsync(string docNo, string peerCode, object userState) {
            if ((this.FnSendTechnicalInspectionVouchersToCUEOperationCompleted == null)) {
                this.FnSendTechnicalInspectionVouchersToCUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendTechnicalInspectionVouchersToCUEOperationCompleted);
            }
            this.InvokeAsync("FnSendTechnicalInspectionVouchersToCUE", new object[] {
                        docNo,
                        peerCode}, this.FnSendTechnicalInspectionVouchersToCUEOperationCompleted, userState);
        }
        
        private void OnFnSendTechnicalInspectionVouchersToCUEOperationCompleted(object arg) {
            if ((this.FnSendTechnicalInspectionVouchersToCUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendTechnicalInspectionVouchersToCUECompleted(this, new FnSendTechnicalInspectionVouchersToCUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:SendStaffClaimApprova" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="SendStaffClaimApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStaffClaimApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim) {
            this.SendStaffClaimApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.SendStaffClaimApprovalOperationCompleted == null)) {
                this.SendStaffClaimApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStaffClaimApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.SendStaffClaimApprovalOperationCompleted, userState);
        }
        
        private void OnSendStaffClaimApprovalOperationCompleted(object arg) {
            if ((this.SendStaffClaimApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStaffClaimApprovalCompleted(this, new SendStaffClaimApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:CreateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="CreateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaim(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string budget) {
            object[] results = this.Invoke("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        budget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string budget) {
            this.CreateStaffClaimAsync(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, budget, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string budget, object userState) {
            if ((this.CreateStaffClaimOperationCompleted == null)) {
                this.CreateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        budget}, this.CreateStaffClaimOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimOperationCompleted(object arg) {
            if ((this.CreateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimCompleted(this, new CreateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DeleteStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DeleteStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStaffClaimLine(string employeeNo, string claimNo, int lineNo) {
            object[] results = this.Invoke("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo) {
            this.DeleteStaffClaimLineAsync(employeeNo, claimNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo, object userState) {
            if ((this.DeleteStaffClaimLineOperationCompleted == null)) {
                this.DeleteStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo}, this.DeleteStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnDeleteStaffClaimLineOperationCompleted(object arg) {
            if ((this.DeleteStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStaffClaimLineCompleted(this, new DeleteStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:CreateStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="CreateStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaimLine(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.CreateStaffClaimLineAsync(employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.CreateStaffClaimLineOperationCompleted == null)) {
                this.CreateStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.CreateStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimLineOperationCompleted(object arg) {
            if ((this.CreateStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimLineCompleted(this, new CreateStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:EditStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="EditStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditStaffClaimLine(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.EditStaffClaimLineAsync(lineNo, employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.EditStaffClaimLineOperationCompleted == null)) {
                this.EditStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.EditStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnEditStaffClaimLineOperationCompleted(object arg) {
            if ((this.EditStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditStaffClaimLineCompleted(this, new EditStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string email, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        email,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string email, string currentPassword, string newPassword, string confirmPassword) {
            this.ChangePasswordAsync(email, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string email, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        email,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetCollaborationPee" +
            "rComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetCollaborationPeerComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetCollaborationPeerComments(string sectNo, string docNo) {
            object[] results = this.Invoke("FnGetCollaborationPeerComments", new object[] {
                        sectNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCollaborationPeerCommentsAsync(string sectNo, string docNo) {
            this.FnGetCollaborationPeerCommentsAsync(sectNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnGetCollaborationPeerCommentsAsync(string sectNo, string docNo, object userState) {
            if ((this.FnGetCollaborationPeerCommentsOperationCompleted == null)) {
                this.FnGetCollaborationPeerCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCollaborationPeerCommentsOperationCompleted);
            }
            this.InvokeAsync("FnGetCollaborationPeerComments", new object[] {
                        sectNo,
                        docNo}, this.FnGetCollaborationPeerCommentsOperationCompleted, userState);
        }
        
        private void OnFnGetCollaborationPeerCommentsOperationCompleted(object arg) {
            if ((this.FnGetCollaborationPeerCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCollaborationPeerCommentsCompleted(this, new FnGetCollaborationPeerCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetPAPeerComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetPAPeerComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPAPeerComments(string sectNo, string docNo) {
            object[] results = this.Invoke("FnGetPAPeerComments", new object[] {
                        sectNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPAPeerCommentsAsync(string sectNo, string docNo) {
            this.FnGetPAPeerCommentsAsync(sectNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnGetPAPeerCommentsAsync(string sectNo, string docNo, object userState) {
            if ((this.FnGetPAPeerCommentsOperationCompleted == null)) {
                this.FnGetPAPeerCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPAPeerCommentsOperationCompleted);
            }
            this.InvokeAsync("FnGetPAPeerComments", new object[] {
                        sectNo,
                        docNo}, this.FnGetPAPeerCommentsOperationCompleted, userState);
        }
        
        private void OnFnGetPAPeerCommentsOperationCompleted(object arg) {
            if ((this.FnGetPAPeerCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPAPeerCommentsCompleted(this, new FnGetPAPeerCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGenerateAssReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGenerateAssReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateAssReport(string docNo) {
            object[] results = this.Invoke("FnGenerateAssReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateAssReportAsync(string docNo) {
            this.FnGenerateAssReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateAssReportAsync(string docNo, object userState) {
            if ((this.FnGenerateAssReportOperationCompleted == null)) {
                this.FnGenerateAssReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateAssReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateAssReport", new object[] {
                        docNo}, this.FnGenerateAssReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateAssReportOperationCompleted(object arg) {
            if ((this.FnGenerateAssReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateAssReportCompleted(this, new FnGenerateAssReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetPAPeerComponents" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetPAPeerComponents_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPAPeerComponents(string docNo, string appNo, string codeno) {
            object[] results = this.Invoke("FnGetPAPeerComponents", new object[] {
                        docNo,
                        appNo,
                        codeno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPAPeerComponentsAsync(string docNo, string appNo, string codeno) {
            this.FnGetPAPeerComponentsAsync(docNo, appNo, codeno, null);
        }
        
        /// <remarks/>
        public void FnGetPAPeerComponentsAsync(string docNo, string appNo, string codeno, object userState) {
            if ((this.FnGetPAPeerComponentsOperationCompleted == null)) {
                this.FnGetPAPeerComponentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPAPeerComponentsOperationCompleted);
            }
            this.InvokeAsync("FnGetPAPeerComponents", new object[] {
                        docNo,
                        appNo,
                        codeno}, this.FnGetPAPeerComponentsOperationCompleted, userState);
        }
        
        private void OnFnGetPAPeerComponentsOperationCompleted(object arg) {
            if ((this.FnGetPAPeerComponentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPAPeerComponentsCompleted(this, new FnGetPAPeerComponentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetPAPeerComponents" +
            "Each", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetPAPeerComponentsEach_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPAPeerComponentsEach(string docNo, string appNo, string codeno) {
            object[] results = this.Invoke("FnGetPAPeerComponentsEach", new object[] {
                        docNo,
                        appNo,
                        codeno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPAPeerComponentsEachAsync(string docNo, string appNo, string codeno) {
            this.FnGetPAPeerComponentsEachAsync(docNo, appNo, codeno, null);
        }
        
        /// <remarks/>
        public void FnGetPAPeerComponentsEachAsync(string docNo, string appNo, string codeno, object userState) {
            if ((this.FnGetPAPeerComponentsEachOperationCompleted == null)) {
                this.FnGetPAPeerComponentsEachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPAPeerComponentsEachOperationCompleted);
            }
            this.InvokeAsync("FnGetPAPeerComponentsEach", new object[] {
                        docNo,
                        appNo,
                        codeno}, this.FnGetPAPeerComponentsEachOperationCompleted, userState);
        }
        
        private void OnFnGetPAPeerComponentsEachOperationCompleted(object arg) {
            if ((this.FnGetPAPeerComponentsEachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPAPeerComponentsEachCompleted(this, new FnGetPAPeerComponentsEachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetPAPeerCommentsEa" +
            "ch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetPAPeerCommentsEach_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPAPeerCommentsEach(string docNo) {
            object[] results = this.Invoke("FnGetPAPeerCommentsEach", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPAPeerCommentsEachAsync(string docNo) {
            this.FnGetPAPeerCommentsEachAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGetPAPeerCommentsEachAsync(string docNo, object userState) {
            if ((this.FnGetPAPeerCommentsEachOperationCompleted == null)) {
                this.FnGetPAPeerCommentsEachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPAPeerCommentsEachOperationCompleted);
            }
            this.InvokeAsync("FnGetPAPeerCommentsEach", new object[] {
                        docNo}, this.FnGetPAPeerCommentsEachOperationCompleted, userState);
        }
        
        private void OnFnGetPAPeerCommentsEachOperationCompleted(object arg) {
            if ((this.FnGetPAPeerCommentsEachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPAPeerCommentsEachCompleted(this, new FnGetPAPeerCommentsEachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGenerateSiteAssRepo" +
            "rt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGenerateSiteAssReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateSiteAssReport(string docNo) {
            object[] results = this.Invoke("FnGenerateSiteAssReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateSiteAssReportAsync(string docNo) {
            this.FnGenerateSiteAssReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateSiteAssReportAsync(string docNo, object userState) {
            if ((this.FnGenerateSiteAssReportOperationCompleted == null)) {
                this.FnGenerateSiteAssReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateSiteAssReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateSiteAssReport", new object[] {
                        docNo}, this.FnGenerateSiteAssReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateSiteAssReportOperationCompleted(object arg) {
            if ((this.FnGenerateSiteAssReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateSiteAssReportCompleted(this, new FnGenerateSiteAssReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetPASiteComponentC" +
            "omments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetPASiteComponentComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPASiteComponentComments(string docNo) {
            object[] results = this.Invoke("FnGetPASiteComponentComments", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPASiteComponentCommentsAsync(string docNo) {
            this.FnGetPASiteComponentCommentsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGetPASiteComponentCommentsAsync(string docNo, object userState) {
            if ((this.FnGetPASiteComponentCommentsOperationCompleted == null)) {
                this.FnGetPASiteComponentCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPASiteComponentCommentsOperationCompleted);
            }
            this.InvokeAsync("FnGetPASiteComponentComments", new object[] {
                        docNo}, this.FnGetPASiteComponentCommentsOperationCompleted, userState);
        }
        
        private void OnFnGetPASiteComponentCommentsOperationCompleted(object arg) {
            if ((this.FnGetPASiteComponentCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPASiteComponentCommentsCompleted(this, new FnGetPASiteComponentCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSaveCollaborationSi" +
            "teComponentComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSaveCollaborationSiteComponentComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveCollaborationSiteComponentComments(string sectNo, string docNo, int entryNo, string stregth, string weakness, string recommendation) {
            object[] results = this.Invoke("FnSaveCollaborationSiteComponentComments", new object[] {
                        sectNo,
                        docNo,
                        entryNo,
                        stregth,
                        weakness,
                        recommendation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveCollaborationSiteComponentCommentsAsync(string sectNo, string docNo, int entryNo, string stregth, string weakness, string recommendation) {
            this.FnSaveCollaborationSiteComponentCommentsAsync(sectNo, docNo, entryNo, stregth, weakness, recommendation, null);
        }
        
        /// <remarks/>
        public void FnSaveCollaborationSiteComponentCommentsAsync(string sectNo, string docNo, int entryNo, string stregth, string weakness, string recommendation, object userState) {
            if ((this.FnSaveCollaborationSiteComponentCommentsOperationCompleted == null)) {
                this.FnSaveCollaborationSiteComponentCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveCollaborationSiteComponentCommentsOperationCompleted);
            }
            this.InvokeAsync("FnSaveCollaborationSiteComponentComments", new object[] {
                        sectNo,
                        docNo,
                        entryNo,
                        stregth,
                        weakness,
                        recommendation}, this.FnSaveCollaborationSiteComponentCommentsOperationCompleted, userState);
        }
        
        private void OnFnSaveCollaborationSiteComponentCommentsOperationCompleted(object arg) {
            if ((this.FnSaveCollaborationSiteComponentCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveCollaborationSiteComponentCommentsCompleted(this, new FnSaveCollaborationSiteComponentCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSaveOverallComment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSaveOverallComment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveOverallComment(string docNo, string comment) {
            object[] results = this.Invoke("FnSaveOverallComment", new object[] {
                        docNo,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveOverallCommentAsync(string docNo, string comment) {
            this.FnSaveOverallCommentAsync(docNo, comment, null);
        }
        
        /// <remarks/>
        public void FnSaveOverallCommentAsync(string docNo, string comment, object userState) {
            if ((this.FnSaveOverallCommentOperationCompleted == null)) {
                this.FnSaveOverallCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveOverallCommentOperationCompleted);
            }
            this.InvokeAsync("FnSaveOverallComment", new object[] {
                        docNo,
                        comment}, this.FnSaveOverallCommentOperationCompleted, userState);
        }
        
        private void OnFnSaveOverallCommentOperationCompleted(object arg) {
            if ((this.FnSaveOverallCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveOverallCommentCompleted(this, new FnSaveOverallCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSaveOverallCommentC" +
            "urriculum", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSaveOverallCommentCurriculum_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveOverallCommentCurriculum(string docNo, string comment) {
            object[] results = this.Invoke("FnSaveOverallCommentCurriculum", new object[] {
                        docNo,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveOverallCommentCurriculumAsync(string docNo, string comment) {
            this.FnSaveOverallCommentCurriculumAsync(docNo, comment, null);
        }
        
        /// <remarks/>
        public void FnSaveOverallCommentCurriculumAsync(string docNo, string comment, object userState) {
            if ((this.FnSaveOverallCommentCurriculumOperationCompleted == null)) {
                this.FnSaveOverallCommentCurriculumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveOverallCommentCurriculumOperationCompleted);
            }
            this.InvokeAsync("FnSaveOverallCommentCurriculum", new object[] {
                        docNo,
                        comment}, this.FnSaveOverallCommentCurriculumOperationCompleted, userState);
        }
        
        private void OnFnSaveOverallCommentCurriculumOperationCompleted(object arg) {
            if ((this.FnSaveOverallCommentCurriculumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveOverallCommentCurriculumCompleted(this, new FnSaveOverallCommentCurriculumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetCollaborationSit" +
            "eComponentComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetCollaborationSiteComponentComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetCollaborationSiteComponentComments(string docNo) {
            object[] results = this.Invoke("FnGetCollaborationSiteComponentComments", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCollaborationSiteComponentCommentsAsync(string docNo) {
            this.FnGetCollaborationSiteComponentCommentsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGetCollaborationSiteComponentCommentsAsync(string docNo, object userState) {
            if ((this.FnGetCollaborationSiteComponentCommentsOperationCompleted == null)) {
                this.FnGetCollaborationSiteComponentCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCollaborationSiteComponentCommentsOperationCompleted);
            }
            this.InvokeAsync("FnGetCollaborationSiteComponentComments", new object[] {
                        docNo}, this.FnGetCollaborationSiteComponentCommentsOperationCompleted, userState);
        }
        
        private void OnFnGetCollaborationSiteComponentCommentsOperationCompleted(object arg) {
            if ((this.FnGetCollaborationSiteComponentCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCollaborationSiteComponentCommentsCompleted(this, new FnGetCollaborationSiteComponentCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSavePASiteComponent" +
            "Comments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSavePASiteComponentComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSavePASiteComponentComments(string sectNo, string docNo, int entryNo, string stregth, string weakness, string recommendation) {
            object[] results = this.Invoke("FnSavePASiteComponentComments", new object[] {
                        sectNo,
                        docNo,
                        entryNo,
                        stregth,
                        weakness,
                        recommendation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSavePASiteComponentCommentsAsync(string sectNo, string docNo, int entryNo, string stregth, string weakness, string recommendation) {
            this.FnSavePASiteComponentCommentsAsync(sectNo, docNo, entryNo, stregth, weakness, recommendation, null);
        }
        
        /// <remarks/>
        public void FnSavePASiteComponentCommentsAsync(string sectNo, string docNo, int entryNo, string stregth, string weakness, string recommendation, object userState) {
            if ((this.FnSavePASiteComponentCommentsOperationCompleted == null)) {
                this.FnSavePASiteComponentCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSavePASiteComponentCommentsOperationCompleted);
            }
            this.InvokeAsync("FnSavePASiteComponentComments", new object[] {
                        sectNo,
                        docNo,
                        entryNo,
                        stregth,
                        weakness,
                        recommendation}, this.FnSavePASiteComponentCommentsOperationCompleted, userState);
        }
        
        private void OnFnSavePASiteComponentCommentsOperationCompleted(object arg) {
            if ((this.FnSavePASiteComponentCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSavePASiteComponentCommentsCompleted(this, new FnSavePASiteComponentCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DataClerkEmailRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DataClerkEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DataClerkEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DataClerkEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataClerkEmailRequestAsync(string usercode, string password) {
            this.DataClerkEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DataClerkEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DataClerkEmailRequestOperationCompleted == null)) {
                this.DataClerkEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataClerkEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DataClerkEmailRequest", new object[] {
                        usercode,
                        password}, this.DataClerkEmailRequestOperationCompleted, userState);
        }
        
        private void OnDataClerkEmailRequestOperationCompleted(object arg) {
            if ((this.DataClerkEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataClerkEmailRequestCompleted(this, new DataClerkEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DataCancelClerkEmailR" +
            "equest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DataCancelClerkEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DataCancelClerkEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DataCancelClerkEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataCancelClerkEmailRequestAsync(string usercode, string password) {
            this.DataCancelClerkEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DataCancelClerkEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DataCancelClerkEmailRequestOperationCompleted == null)) {
                this.DataCancelClerkEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataCancelClerkEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DataCancelClerkEmailRequest", new object[] {
                        usercode,
                        password}, this.DataCancelClerkEmailRequestOperationCompleted, userState);
        }
        
        private void OnDataCancelClerkEmailRequestOperationCompleted(object arg) {
            if ((this.DataCancelClerkEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataCancelClerkEmailRequestCompleted(this, new DataCancelClerkEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DvcApprovalEmailReque" +
            "st", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DvcApprovalEmailRequestAsync(string usercode, string password) {
            this.DvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DvcApprovalEmailRequestOperationCompleted == null)) {
                this.DvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.DvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnDvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.DvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DvcApprovalEmailRequestCompleted(this, new DvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:VcApprovalEmailReques" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="VcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("VcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VcApprovalEmailRequestAsync(string usercode, string password) {
            this.VcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void VcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.VcApprovalEmailRequestOperationCompleted == null)) {
                this.VcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("VcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.VcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnVcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.VcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VcApprovalEmailRequestCompleted(this, new VcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DataclerkfinalvcAppro" +
            "valEmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DataclerkfinalvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DataclerkfinalvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DataclerkfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataclerkfinalvcApprovalEmailRequestAsync(string usercode, string password) {
            this.DataclerkfinalvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DataclerkfinalvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DataclerkfinalvcApprovalEmailRequestOperationCompleted == null)) {
                this.DataclerkfinalvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataclerkfinalvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DataclerkfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.DataclerkfinalvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnDataclerkfinalvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.DataclerkfinalvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataclerkfinalvcApprovalEmailRequestCompleted(this, new DataclerkfinalvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DvcfinalvcApprovalEma" +
            "ilRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DvcfinalvcApprovalEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DvcfinalvcApprovalEmailRequest(string usercode, string password) {
            object[] results = this.Invoke("DvcfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DvcfinalvcApprovalEmailRequestAsync(string usercode, string password) {
            this.DvcfinalvcApprovalEmailRequestAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void DvcfinalvcApprovalEmailRequestAsync(string usercode, string password, object userState) {
            if ((this.DvcfinalvcApprovalEmailRequestOperationCompleted == null)) {
                this.DvcfinalvcApprovalEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDvcfinalvcApprovalEmailRequestOperationCompleted);
            }
            this.InvokeAsync("DvcfinalvcApprovalEmailRequest", new object[] {
                        usercode,
                        password}, this.DvcfinalvcApprovalEmailRequestOperationCompleted, userState);
        }
        
        private void OnDvcfinalvcApprovalEmailRequestOperationCompleted(object arg) {
            if ((this.DvcfinalvcApprovalEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DvcfinalvcApprovalEmailRequestCompleted(this, new DvcfinalvcApprovalEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AccountCreationEmailR" +
            "equest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AccountCreationEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccountCreationEmailRequest(string emailaddress, string idnumber) {
            object[] results = this.Invoke("AccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccountCreationEmailRequestAsync(string emailaddress, string idnumber) {
            this.AccountCreationEmailRequestAsync(emailaddress, idnumber, null);
        }
        
        /// <remarks/>
        public void AccountCreationEmailRequestAsync(string emailaddress, string idnumber, object userState) {
            if ((this.AccountCreationEmailRequestOperationCompleted == null)) {
                this.AccountCreationEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountCreationEmailRequestOperationCompleted);
            }
            this.InvokeAsync("AccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber}, this.AccountCreationEmailRequestOperationCompleted, userState);
        }
        
        private void OnAccountCreationEmailRequestOperationCompleted(object arg) {
            if ((this.AccountCreationEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountCreationEmailRequestCompleted(this, new AccountCreationEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnUseraccountCreation" +
            "EmailRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnUseraccountCreationEmailRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUseraccountCreationEmailRequest(string emailaddress, string idnumber) {
            object[] results = this.Invoke("FnUseraccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUseraccountCreationEmailRequestAsync(string emailaddress, string idnumber) {
            this.FnUseraccountCreationEmailRequestAsync(emailaddress, idnumber, null);
        }
        
        /// <remarks/>
        public void FnUseraccountCreationEmailRequestAsync(string emailaddress, string idnumber, object userState) {
            if ((this.FnUseraccountCreationEmailRequestOperationCompleted == null)) {
                this.FnUseraccountCreationEmailRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUseraccountCreationEmailRequestOperationCompleted);
            }
            this.InvokeAsync("FnUseraccountCreationEmailRequest", new object[] {
                        emailaddress,
                        idnumber}, this.FnUseraccountCreationEmailRequestOperationCompleted, userState);
        }
        
        private void OnFnUseraccountCreationEmailRequestOperationCompleted(object arg) {
            if ((this.FnUseraccountCreationEmailRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUseraccountCreationEmailRequestCompleted(this, new FnUseraccountCreationEmailRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnUserHelpEmaiRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnUserHelpEmaiRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUserHelpEmaiRequest(string usercode, string password, string email, string useremailsubject, string messagebody) {
            object[] results = this.Invoke("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody) {
            this.FnUserHelpEmaiRequestAsync(usercode, password, email, useremailsubject, messagebody, null);
        }
        
        /// <remarks/>
        public void FnUserHelpEmaiRequestAsync(string usercode, string password, string email, string useremailsubject, string messagebody, object userState) {
            if ((this.FnUserHelpEmaiRequestOperationCompleted == null)) {
                this.FnUserHelpEmaiRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUserHelpEmaiRequestOperationCompleted);
            }
            this.InvokeAsync("FnUserHelpEmaiRequest", new object[] {
                        usercode,
                        password,
                        email,
                        useremailsubject,
                        messagebody}, this.FnUserHelpEmaiRequestOperationCompleted, userState);
        }
        
        private void OnFnUserHelpEmaiRequestOperationCompleted(object arg) {
            if ((this.FnUserHelpEmaiRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUserHelpEmaiRequestCompleted(this, new FnUserHelpEmaiRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ApprovalStatusDataCol" +
            "lection", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ApprovalStatusDataCollection_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApprovalStatusDataCollection(string usercode, string password) {
            object[] results = this.Invoke("ApprovalStatusDataCollection", new object[] {
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApprovalStatusDataCollectionAsync(string usercode, string password) {
            this.ApprovalStatusDataCollectionAsync(usercode, password, null);
        }
        
        /// <remarks/>
        public void ApprovalStatusDataCollectionAsync(string usercode, string password, object userState) {
            if ((this.ApprovalStatusDataCollectionOperationCompleted == null)) {
                this.ApprovalStatusDataCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovalStatusDataCollectionOperationCompleted);
            }
            this.InvokeAsync("ApprovalStatusDataCollection", new object[] {
                        usercode,
                        password}, this.ApprovalStatusDataCollectionOperationCompleted, userState);
        }
        
        private void OnApprovalStatusDataCollectionOperationCompleted(object arg) {
            if ((this.ApprovalStatusDataCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovalStatusDataCollectionCompleted(this, new ApprovalStatusDataCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:Fnuseraccountcreation" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="Fnuseraccountcreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnuseraccountcreation(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country) {
            object[] results = this.Invoke("Fnuseraccountcreation", new object[] {
                        idnumber,
                        firstname,
                        middlename,
                        lastname,
                        phonenumber,
                        emailaddress,
                        address,
                        postcodes,
                        city,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnuseraccountcreationAsync(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country) {
            this.FnuseraccountcreationAsync(idnumber, firstname, middlename, lastname, phonenumber, emailaddress, address, postcodes, city, country, null);
        }
        
        /// <remarks/>
        public void FnuseraccountcreationAsync(string idnumber, string firstname, string middlename, string lastname, string phonenumber, string emailaddress, string address, string postcodes, string city, string country, object userState) {
            if ((this.FnuseraccountcreationOperationCompleted == null)) {
                this.FnuseraccountcreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnuseraccountcreationOperationCompleted);
            }
            this.InvokeAsync("Fnuseraccountcreation", new object[] {
                        idnumber,
                        firstname,
                        middlename,
                        lastname,
                        phonenumber,
                        emailaddress,
                        address,
                        postcodes,
                        city,
                        country}, this.FnuseraccountcreationOperationCompleted, userState);
        }
        
        private void OnFnuseraccountcreationOperationCompleted(object arg) {
            if ((this.FnuseraccountcreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnuseraccountcreationCompleted(this, new FnuseraccountcreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress, string originalpass, string newpass, string confirmpass) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress,
                        originalpass,
                        newpass,
                        confirmpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, string originalpass, string newpass, string confirmpass) {
            this.FnResetPasswordAsync(emailaddress, originalpass, newpass, confirmpass, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, string originalpass, string newpass, string confirmpass, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress,
                        originalpass,
                        newpass,
                        confirmpass}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:PortalResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="PortalResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PortalResetPassword(string emailaddress) {
            object[] results = this.Invoke("PortalResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress) {
            this.PortalResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void PortalResetPasswordAsync(string emailaddress, object userState) {
            if ((this.PortalResetPasswordOperationCompleted == null)) {
                this.PortalResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPortalResetPasswordOperationCompleted);
            }
            this.InvokeAsync("PortalResetPassword", new object[] {
                        emailaddress}, this.PortalResetPasswordOperationCompleted, userState);
        }
        
        private void OnPortalResetPasswordOperationCompleted(object arg) {
            if ((this.PortalResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PortalResetPasswordCompleted(this, new PortalResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGenerateProgrammeFe" +
            "edbackVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGenerateProgrammeFeedbackVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProgrammeFeedbackVoucher(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateProgrammeFeedbackVoucher", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeFeedbackVoucherAsync(string programmeNumber, string university) {
            this.FnGenerateProgrammeFeedbackVoucherAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeFeedbackVoucherAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateProgrammeFeedbackVoucherOperationCompleted == null)) {
                this.FnGenerateProgrammeFeedbackVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProgrammeFeedbackVoucherOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProgrammeFeedbackVoucher", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateProgrammeFeedbackVoucherOperationCompleted, userState);
        }
        
        private void OnFnGenerateProgrammeFeedbackVoucherOperationCompleted(object arg) {
            if ((this.FnGenerateProgrammeFeedbackVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProgrammeFeedbackVoucherCompleted(this, new FnGenerateProgrammeFeedbackVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGenerateProgrammeEv" +
            "aluationToool", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGenerateProgrammeEvaluationToool_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateProgrammeEvaluationToool(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateProgrammeEvaluationToool", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeEvaluationTooolAsync(string programmeNumber, string university) {
            this.FnGenerateProgrammeEvaluationTooolAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateProgrammeEvaluationTooolAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateProgrammeEvaluationTooolOperationCompleted == null)) {
                this.FnGenerateProgrammeEvaluationTooolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateProgrammeEvaluationTooolOperationCompleted);
            }
            this.InvokeAsync("FnGenerateProgrammeEvaluationToool", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateProgrammeEvaluationTooolOperationCompleted, userState);
        }
        
        private void OnFnGenerateProgrammeEvaluationTooolOperationCompleted(object arg) {
            if ((this.FnGenerateProgrammeEvaluationTooolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateProgrammeEvaluationTooolCompleted(this, new FnGenerateProgrammeEvaluationTooolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnNewWorkOrderEmailAl" +
            "ert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnNewWorkOrderEmailAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewWorkOrderEmailAlert(string universityNumber, string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnNewWorkOrderEmailAlert", new object[] {
                        universityNumber,
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewWorkOrderEmailAlertAsync(string universityNumber, string programmeAccreditationNumber) {
            this.FnNewWorkOrderEmailAlertAsync(universityNumber, programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnNewWorkOrderEmailAlertAsync(string universityNumber, string programmeAccreditationNumber, object userState) {
            if ((this.FnNewWorkOrderEmailAlertOperationCompleted == null)) {
                this.FnNewWorkOrderEmailAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewWorkOrderEmailAlertOperationCompleted);
            }
            this.InvokeAsync("FnNewWorkOrderEmailAlert", new object[] {
                        universityNumber,
                        programmeAccreditationNumber}, this.FnNewWorkOrderEmailAlertOperationCompleted, userState);
        }
        
        private void OnFnNewWorkOrderEmailAlertOperationCompleted(object arg) {
            if ((this.FnNewWorkOrderEmailAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewWorkOrderEmailAlertCompleted(this, new FnNewWorkOrderEmailAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnAccreditationPaymen" +
            "tsAlerts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnAccreditationPaymentsAlerts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAccreditationPaymentsAlerts(string universityNumber, string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnAccreditationPaymentsAlerts", new object[] {
                        universityNumber,
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAccreditationPaymentsAlertsAsync(string universityNumber, string programmeAccreditationNumber) {
            this.FnAccreditationPaymentsAlertsAsync(universityNumber, programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnAccreditationPaymentsAlertsAsync(string universityNumber, string programmeAccreditationNumber, object userState) {
            if ((this.FnAccreditationPaymentsAlertsOperationCompleted == null)) {
                this.FnAccreditationPaymentsAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAccreditationPaymentsAlertsOperationCompleted);
            }
            this.InvokeAsync("FnAccreditationPaymentsAlerts", new object[] {
                        universityNumber,
                        programmeAccreditationNumber}, this.FnAccreditationPaymentsAlertsOperationCompleted, userState);
        }
        
        private void OnFnAccreditationPaymentsAlertsOperationCompleted(object arg) {
            if ((this.FnAccreditationPaymentsAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAccreditationPaymentsAlertsCompleted(this, new FnAccreditationPaymentsAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnAccreditationAlerts" +
            "ToUniversity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnAccreditationAlertsToUniversity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAccreditationAlertsToUniversity(string universityNumber, string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnAccreditationAlertsToUniversity", new object[] {
                        universityNumber,
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAccreditationAlertsToUniversityAsync(string universityNumber, string programmeAccreditationNumber) {
            this.FnAccreditationAlertsToUniversityAsync(universityNumber, programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnAccreditationAlertsToUniversityAsync(string universityNumber, string programmeAccreditationNumber, object userState) {
            if ((this.FnAccreditationAlertsToUniversityOperationCompleted == null)) {
                this.FnAccreditationAlertsToUniversityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAccreditationAlertsToUniversityOperationCompleted);
            }
            this.InvokeAsync("FnAccreditationAlertsToUniversity", new object[] {
                        universityNumber,
                        programmeAccreditationNumber}, this.FnAccreditationAlertsToUniversityOperationCompleted, userState);
        }
        
        private void OnFnAccreditationAlertsToUniversityOperationCompleted(object arg) {
            if ((this.FnAccreditationAlertsToUniversityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAccreditationAlertsToUniversityCompleted(this, new FnAccreditationAlertsToUniversityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGenerateExitReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGenerateExitReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateExitReport(string programmeNumber, string university) {
            object[] results = this.Invoke("FnGenerateExitReport", new object[] {
                        programmeNumber,
                        university});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateExitReportAsync(string programmeNumber, string university) {
            this.FnGenerateExitReportAsync(programmeNumber, university, null);
        }
        
        /// <remarks/>
        public void FnGenerateExitReportAsync(string programmeNumber, string university, object userState) {
            if ((this.FnGenerateExitReportOperationCompleted == null)) {
                this.FnGenerateExitReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateExitReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateExitReport", new object[] {
                        programmeNumber,
                        university}, this.FnGenerateExitReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateExitReportOperationCompleted(object arg) {
            if ((this.FnGenerateExitReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateExitReportCompleted(this, new FnGenerateExitReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSubmitUniversityAcc" +
            "reditationFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSubmitUniversityAccreditationFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitUniversityAccreditationFeedback(string accreditationNumber, string voucherNumber, string component, string subcomponent, string universityFeedback) {
            object[] results = this.Invoke("FnSubmitUniversityAccreditationFeedback", new object[] {
                        accreditationNumber,
                        voucherNumber,
                        component,
                        subcomponent,
                        universityFeedback});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitUniversityAccreditationFeedbackAsync(string accreditationNumber, string voucherNumber, string component, string subcomponent, string universityFeedback) {
            this.FnSubmitUniversityAccreditationFeedbackAsync(accreditationNumber, voucherNumber, component, subcomponent, universityFeedback, null);
        }
        
        /// <remarks/>
        public void FnSubmitUniversityAccreditationFeedbackAsync(string accreditationNumber, string voucherNumber, string component, string subcomponent, string universityFeedback, object userState) {
            if ((this.FnSubmitUniversityAccreditationFeedbackOperationCompleted == null)) {
                this.FnSubmitUniversityAccreditationFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitUniversityAccreditationFeedbackOperationCompleted);
            }
            this.InvokeAsync("FnSubmitUniversityAccreditationFeedback", new object[] {
                        accreditationNumber,
                        voucherNumber,
                        component,
                        subcomponent,
                        universityFeedback}, this.FnSubmitUniversityAccreditationFeedbackOperationCompleted, userState);
        }
        
        private void OnFnSubmitUniversityAccreditationFeedbackOperationCompleted(object arg) {
            if ((this.FnSubmitUniversityAccreditationFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitUniversityAccreditationFeedbackCompleted(this, new FnSubmitUniversityAccreditationFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSubmitInstitutionAc" +
            "creditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSubmitInstitutionAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitInstitutionAccreditation(string universityCode, string instAccreditationNo, string progAccreditationNo, string username, string password) {
            object[] results = this.Invoke("FnSubmitInstitutionAccreditation", new object[] {
                        universityCode,
                        instAccreditationNo,
                        progAccreditationNo,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitInstitutionAccreditationAsync(string universityCode, string instAccreditationNo, string progAccreditationNo, string username, string password) {
            this.FnSubmitInstitutionAccreditationAsync(universityCode, instAccreditationNo, progAccreditationNo, username, password, null);
        }
        
        /// <remarks/>
        public void FnSubmitInstitutionAccreditationAsync(string universityCode, string instAccreditationNo, string progAccreditationNo, string username, string password, object userState) {
            if ((this.FnSubmitInstitutionAccreditationOperationCompleted == null)) {
                this.FnSubmitInstitutionAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitInstitutionAccreditationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitInstitutionAccreditation", new object[] {
                        universityCode,
                        instAccreditationNo,
                        progAccreditationNo,
                        username,
                        password}, this.FnSubmitInstitutionAccreditationOperationCompleted, userState);
        }
        
        private void OnFnSubmitInstitutionAccreditationOperationCompleted(object arg) {
            if ((this.FnSubmitInstitutionAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitInstitutionAccreditationCompleted(this, new FnSubmitInstitutionAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnUniversityFeedbackC" +
            "ommentsEmailAlert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnUniversityFeedbackCommentsEmailAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUniversityFeedbackCommentsEmailAlert(string programmeAccreditationNumber) {
            object[] results = this.Invoke("FnUniversityFeedbackCommentsEmailAlert", new object[] {
                        programmeAccreditationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUniversityFeedbackCommentsEmailAlertAsync(string programmeAccreditationNumber) {
            this.FnUniversityFeedbackCommentsEmailAlertAsync(programmeAccreditationNumber, null);
        }
        
        /// <remarks/>
        public void FnUniversityFeedbackCommentsEmailAlertAsync(string programmeAccreditationNumber, object userState) {
            if ((this.FnUniversityFeedbackCommentsEmailAlertOperationCompleted == null)) {
                this.FnUniversityFeedbackCommentsEmailAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUniversityFeedbackCommentsEmailAlertOperationCompleted);
            }
            this.InvokeAsync("FnUniversityFeedbackCommentsEmailAlert", new object[] {
                        programmeAccreditationNumber}, this.FnUniversityFeedbackCommentsEmailAlertOperationCompleted, userState);
        }
        
        private void OnFnUniversityFeedbackCommentsEmailAlertOperationCompleted(object arg) {
            if ((this.FnUniversityFeedbackCommentsEmailAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUniversityFeedbackCommentsEmailAlertCompleted(this, new FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AcceptPeerReviewerJob" +
            "IA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AcceptPeerReviewerJobIA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptPeerReviewerJobIA(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptPeerReviewerJobIA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobIAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptPeerReviewerJobIAAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobIAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptPeerReviewerJobIAOperationCompleted == null)) {
                this.AcceptPeerReviewerJobIAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPeerReviewerJobIAOperationCompleted);
            }
            this.InvokeAsync("AcceptPeerReviewerJobIA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptPeerReviewerJobIAOperationCompleted, userState);
        }
        
        private void OnAcceptPeerReviewerJobIAOperationCompleted(object arg) {
            if ((this.AcceptPeerReviewerJobIACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPeerReviewerJobIACompleted(this, new AcceptPeerReviewerJobIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AcceptPeerReviewerJob" +
            "PQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AcceptPeerReviewerJobPQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptPeerReviewerJobPQ(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptPeerReviewerJobPQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobPQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptPeerReviewerJobPQAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobPQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptPeerReviewerJobPQOperationCompleted == null)) {
                this.AcceptPeerReviewerJobPQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPeerReviewerJobPQOperationCompleted);
            }
            this.InvokeAsync("AcceptPeerReviewerJobPQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptPeerReviewerJobPQOperationCompleted, userState);
        }
        
        private void OnAcceptPeerReviewerJobPQOperationCompleted(object arg) {
            if ((this.AcceptPeerReviewerJobPQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPeerReviewerJobPQCompleted(this, new AcceptPeerReviewerJobPQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AcceptPeerReviewerJob" +
            "IQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AcceptPeerReviewerJobIQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptPeerReviewerJobIQ(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptPeerReviewerJobIQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobIQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptPeerReviewerJobIQAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobIQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptPeerReviewerJobIQOperationCompleted == null)) {
                this.AcceptPeerReviewerJobIQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPeerReviewerJobIQOperationCompleted);
            }
            this.InvokeAsync("AcceptPeerReviewerJobIQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptPeerReviewerJobIQOperationCompleted, userState);
        }
        
        private void OnAcceptPeerReviewerJobIQOperationCompleted(object arg) {
            if ((this.AcceptPeerReviewerJobIQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPeerReviewerJobIQCompleted(this, new AcceptPeerReviewerJobIQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddPeerReviewersEvalu" +
            "ation1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddPeerReviewersEvaluation1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerReviewersEvaluation1(string applicationNo, string evalNo, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, bool scorena) {
            object[] results = this.Invoke("AddPeerReviewersEvaluation1", new object[] {
                        applicationNo,
                        evalNo,
                        component,
                        subComponent,
                        strength,
                        weakness,
                        recommendation,
                        score,
                        scorena});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerReviewersEvaluation1Async(string applicationNo, string evalNo, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, bool scorena) {
            this.AddPeerReviewersEvaluation1Async(applicationNo, evalNo, component, subComponent, strength, weakness, recommendation, score, scorena, null);
        }
        
        /// <remarks/>
        public void AddPeerReviewersEvaluation1Async(string applicationNo, string evalNo, string component, string subComponent, string strength, string weakness, string recommendation, decimal score, bool scorena, object userState) {
            if ((this.AddPeerReviewersEvaluation1OperationCompleted == null)) {
                this.AddPeerReviewersEvaluation1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerReviewersEvaluation1OperationCompleted);
            }
            this.InvokeAsync("AddPeerReviewersEvaluation1", new object[] {
                        applicationNo,
                        evalNo,
                        component,
                        subComponent,
                        strength,
                        weakness,
                        recommendation,
                        score,
                        scorena}, this.AddPeerReviewersEvaluation1OperationCompleted, userState);
        }
        
        private void OnAddPeerReviewersEvaluation1OperationCompleted(object arg) {
            if ((this.AddPeerReviewersEvaluation1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerReviewersEvaluation1Completed(this, new AddPeerReviewersEvaluation1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddProgrammeAccCommen" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddProgrammeAccComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgrammeAccComments(int lineno, string evalNo, string component, string subComponent, decimal score, bool na) {
            object[] results = this.Invoke("AddProgrammeAccComments", new object[] {
                        lineno,
                        evalNo,
                        component,
                        subComponent,
                        score,
                        na});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgrammeAccCommentsAsync(int lineno, string evalNo, string component, string subComponent, decimal score, bool na) {
            this.AddProgrammeAccCommentsAsync(lineno, evalNo, component, subComponent, score, na, null);
        }
        
        /// <remarks/>
        public void AddProgrammeAccCommentsAsync(int lineno, string evalNo, string component, string subComponent, decimal score, bool na, object userState) {
            if ((this.AddProgrammeAccCommentsOperationCompleted == null)) {
                this.AddProgrammeAccCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgrammeAccCommentsOperationCompleted);
            }
            this.InvokeAsync("AddProgrammeAccComments", new object[] {
                        lineno,
                        evalNo,
                        component,
                        subComponent,
                        score,
                        na}, this.AddProgrammeAccCommentsOperationCompleted, userState);
        }
        
        private void OnAddProgrammeAccCommentsOperationCompleted(object arg) {
            if ((this.AddProgrammeAccCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgrammeAccCommentsCompleted(this, new AddProgrammeAccCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddCollaborationComme" +
            "nts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddCollaborationComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCollaborationComments(int lineno, string evalNo, string component, string subComponent, decimal score, bool na) {
            object[] results = this.Invoke("AddCollaborationComments", new object[] {
                        lineno,
                        evalNo,
                        component,
                        subComponent,
                        score,
                        na});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCollaborationCommentsAsync(int lineno, string evalNo, string component, string subComponent, decimal score, bool na) {
            this.AddCollaborationCommentsAsync(lineno, evalNo, component, subComponent, score, na, null);
        }
        
        /// <remarks/>
        public void AddCollaborationCommentsAsync(int lineno, string evalNo, string component, string subComponent, decimal score, bool na, object userState) {
            if ((this.AddCollaborationCommentsOperationCompleted == null)) {
                this.AddCollaborationCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCollaborationCommentsOperationCompleted);
            }
            this.InvokeAsync("AddCollaborationComments", new object[] {
                        lineno,
                        evalNo,
                        component,
                        subComponent,
                        score,
                        na}, this.AddCollaborationCommentsOperationCompleted, userState);
        }
        
        private void OnAddCollaborationCommentsOperationCompleted(object arg) {
            if ((this.AddCollaborationCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCollaborationCommentsCompleted(this, new AddCollaborationCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnEditPeerReviewersEv" +
            "aluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnEditPeerReviewersEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditPeerReviewersEvaluation(int entryCode, string strength, string weakness, string recommendation, decimal score) {
            object[] results = this.Invoke("FnEditPeerReviewersEvaluation", new object[] {
                        entryCode,
                        strength,
                        weakness,
                        recommendation,
                        score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPeerReviewersEvaluationAsync(int entryCode, string strength, string weakness, string recommendation, decimal score) {
            this.FnEditPeerReviewersEvaluationAsync(entryCode, strength, weakness, recommendation, score, null);
        }
        
        /// <remarks/>
        public void FnEditPeerReviewersEvaluationAsync(int entryCode, string strength, string weakness, string recommendation, decimal score, object userState) {
            if ((this.FnEditPeerReviewersEvaluationOperationCompleted == null)) {
                this.FnEditPeerReviewersEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPeerReviewersEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnEditPeerReviewersEvaluation", new object[] {
                        entryCode,
                        strength,
                        weakness,
                        recommendation,
                        score}, this.FnEditPeerReviewersEvaluationOperationCompleted, userState);
        }
        
        private void OnFnEditPeerReviewersEvaluationOperationCompleted(object arg) {
            if ((this.FnEditPeerReviewersEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPeerReviewersEvaluationCompleted(this, new FnEditPeerReviewersEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendPeerApprovalReq" +
            "uest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendPeerApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("FnSendPeerApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerApprovalRequestAsync(string userCode, string password) {
            this.FnSendPeerApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void FnSendPeerApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.FnSendPeerApprovalRequestOperationCompleted == null)) {
                this.FnSendPeerApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerApprovalRequest", new object[] {
                        userCode,
                        password}, this.FnSendPeerApprovalRequestOperationCompleted, userState);
        }
        
        private void OnFnSendPeerApprovalRequestOperationCompleted(object arg) {
            if ((this.FnSendPeerApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerApprovalRequestCompleted(this, new FnSendPeerApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnRegisterPeerReviewe" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnRegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegisterPeerReviewer(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("FnRegisterPeerReviewer", new object[] {
                        name,
                        idNumber,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterPeerReviewerAsync(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.FnRegisterPeerReviewerAsync(name, idNumber, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void FnRegisterPeerReviewerAsync(string name, string idNumber, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.FnRegisterPeerReviewerOperationCompleted == null)) {
                this.FnRegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("FnRegisterPeerReviewer", new object[] {
                        name,
                        idNumber,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.FnRegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnFnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.FnRegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterPeerReviewerCompleted(this, new FnRegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnGetVendornNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnGetVendornNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetVendornNumber(string usercode) {
            object[] results = this.Invoke("FnGetVendornNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetVendornNumberAsync(string usercode) {
            this.FnGetVendornNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void FnGetVendornNumberAsync(string usercode, object userState) {
            if ((this.FnGetVendornNumberOperationCompleted == null)) {
                this.FnGetVendornNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetVendornNumberOperationCompleted);
            }
            this.InvokeAsync("FnGetVendornNumber", new object[] {
                        usercode}, this.FnGetVendornNumberOperationCompleted, userState);
        }
        
        private void OnFnGetVendornNumberOperationCompleted(object arg) {
            if ((this.FnGetVendornNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetVendornNumberCompleted(this, new FnGetVendornNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertBlog", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertBlog_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlog(string blogTitle, string blogBody, string dirNo, string dirName) {
            object[] results = this.Invoke("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName) {
            this.FnInsertBlogAsync(blogTitle, blogBody, dirNo, dirName, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName, object userState) {
            if ((this.FnInsertBlogOperationCompleted == null)) {
                this.FnInsertBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName}, this.FnInsertBlogOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogOperationCompleted(object arg) {
            if ((this.FnInsertBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogCompleted(this, new FnInsertBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnInsertBlogReply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnInsertBlogReply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlogReply(string blogReply, string dirNo, string dirName, int blogId) {
            object[] results = this.Invoke("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId) {
            this.FnInsertBlogReplyAsync(blogReply, dirNo, dirName, blogId, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId, object userState) {
            if ((this.FnInsertBlogReplyOperationCompleted == null)) {
                this.FnInsertBlogReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogReplyOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId}, this.FnInsertBlogReplyOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogReplyOperationCompleted(object arg) {
            if ((this.FnInsertBlogReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogReplyCompleted(this, new FnInsertBlogReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:SendApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password) {
            this.SendApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendApprovalRequestOperationCompleted == null)) {
                this.SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendApprovalRequestOperationCompleted(object arg) {
            if ((this.SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendApprovalRequestCompleted(this, new SendApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:SendProgramApprovalRe" +
            "quest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="SendProgramApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendProgramApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendProgramApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendProgramApprovalRequestAsync(string userCode, string password) {
            this.SendProgramApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendProgramApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendProgramApprovalRequestOperationCompleted == null)) {
                this.SendProgramApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendProgramApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendProgramApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendProgramApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendProgramApprovalRequestOperationCompleted(object arg) {
            if ((this.SendProgramApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendProgramApprovalRequestCompleted(this, new SendProgramApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ApproveRejectRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ApproveRejectRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectRequestOperationCompleted == null)) {
                this.ApproveRejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectRequestCompleted(this, new ApproveRejectRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ApproveRejectProgramR" +
            "equest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ApproveRejectProgramRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectProgramRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectProgramRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectProgramRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectProgramRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectProgramRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectProgramRequestOperationCompleted == null)) {
                this.ApproveRejectProgramRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectProgramRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectProgramRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectProgramRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectProgramRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectProgramRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectProgramRequestCompleted(this, new ApproveRejectProgramRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:CancelApprovalProgram" +
            "Request", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="CancelApprovalProgramRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalProgramRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalProgramRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalProgramRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalProgramRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalProgramRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalProgramRequestOperationCompleted == null)) {
                this.CancelApprovalProgramRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalProgramRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalProgramRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalProgramRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalProgramRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalProgramRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalProgramRequestCompleted(this, new CancelApprovalProgramRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmail(string receiverEmail, string subject, string message) {
            this.Invoke("SendEmail", new object[] {
                        receiverEmail,
                        subject,
                        message});
        }
        
        /// <remarks/>
        public void SendEmailAsync(string receiverEmail, string subject, string message) {
            this.SendEmailAsync(receiverEmail, subject, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string receiverEmail, string subject, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        receiverEmail,
                        subject,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:CancelApprovalRequest" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="CancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalRequestOperationCompleted == null)) {
                this.CancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalRequestCompleted(this, new CancelApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddEvaluationHeaderCo" +
            "mments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddEvaluationHeaderComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEvaluationHeaderComments(string evalNo, string applicationNo, string resource, int evalCategory) {
            object[] results = this.Invoke("AddEvaluationHeaderComments", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEvaluationHeaderCommentsAsync(string evalNo, string applicationNo, string resource, int evalCategory) {
            this.AddEvaluationHeaderCommentsAsync(evalNo, applicationNo, resource, evalCategory, null);
        }
        
        /// <remarks/>
        public void AddEvaluationHeaderCommentsAsync(string evalNo, string applicationNo, string resource, int evalCategory, object userState) {
            if ((this.AddEvaluationHeaderCommentsOperationCompleted == null)) {
                this.AddEvaluationHeaderCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEvaluationHeaderCommentsOperationCompleted);
            }
            this.InvokeAsync("AddEvaluationHeaderComments", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory}, this.AddEvaluationHeaderCommentsOperationCompleted, userState);
        }
        
        private void OnAddEvaluationHeaderCommentsOperationCompleted(object arg) {
            if ((this.AddEvaluationHeaderCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEvaluationHeaderCommentsCompleted(this, new AddEvaluationHeaderCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddSARCommitteesCompo" +
            "sition1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddSARCommitteesComposition1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition1(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name) {
            object[] results = this.Invoke("AddSARCommitteesComposition1", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesComposition1Async(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name) {
            this.AddSARCommitteesComposition1Async(qualityAuditNo, type, description, category, userCode, password, name, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesComposition1Async(string qualityAuditNo, int type, string description, int category, string userCode, string password, string name, object userState) {
            if ((this.AddSARCommitteesComposition1OperationCompleted == null)) {
                this.AddSARCommitteesComposition1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesComposition1OperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition1", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        name}, this.AddSARCommitteesComposition1OperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesComposition1OperationCompleted(object arg) {
            if ((this.AddSARCommitteesComposition1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesComposition1Completed(this, new AddSARCommitteesComposition1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddSARCommitteesCompo" +
            "sition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddSARCommitteesComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            object[] results = this.Invoke("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            this.AddSARCommitteesCompositionAsync(qualityAuditNo, type, description, category, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, object userState) {
            if ((this.AddSARCommitteesCompositionOperationCompleted == null)) {
                this.AddSARCommitteesCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesCompositionOperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password}, this.AddSARCommitteesCompositionOperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesCompositionOperationCompleted(object arg) {
            if ((this.AddSARCommitteesCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesCompositionCompleted(this, new AddSARCommitteesCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RejectPeerReviewerJob" +
            "VR", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RejectPeerReviewerJobVR_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectPeerReviewerJobVR(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            object[] results = this.Invoke("RejectPeerReviewerJobVR", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobVRAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            this.RejectPeerReviewerJobVRAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, reason, null);
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobVRAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason, object userState) {
            if ((this.RejectPeerReviewerJobVROperationCompleted == null)) {
                this.RejectPeerReviewerJobVROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPeerReviewerJobVROperationCompleted);
            }
            this.InvokeAsync("RejectPeerReviewerJobVR", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason}, this.RejectPeerReviewerJobVROperationCompleted, userState);
        }
        
        private void OnRejectPeerReviewerJobVROperationCompleted(object arg) {
            if ((this.RejectPeerReviewerJobVRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPeerReviewerJobVRCompleted(this, new RejectPeerReviewerJobVRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RejectPeerReviewerJob" +
            "CD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RejectPeerReviewerJobCD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectPeerReviewerJobCD(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            object[] results = this.Invoke("RejectPeerReviewerJobCD", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobCDAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            this.RejectPeerReviewerJobCDAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, reason, null);
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobCDAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason, object userState) {
            if ((this.RejectPeerReviewerJobCDOperationCompleted == null)) {
                this.RejectPeerReviewerJobCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPeerReviewerJobCDOperationCompleted);
            }
            this.InvokeAsync("RejectPeerReviewerJobCD", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason}, this.RejectPeerReviewerJobCDOperationCompleted, userState);
        }
        
        private void OnRejectPeerReviewerJobCDOperationCompleted(object arg) {
            if ((this.RejectPeerReviewerJobCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPeerReviewerJobCDCompleted(this, new RejectPeerReviewerJobCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RejectPeerReviewerJob" +
            "PA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RejectPeerReviewerJobPA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectPeerReviewerJobPA(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            object[] results = this.Invoke("RejectPeerReviewerJobPA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobPAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            this.RejectPeerReviewerJobPAAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, reason, null);
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobPAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason, object userState) {
            if ((this.RejectPeerReviewerJobPAOperationCompleted == null)) {
                this.RejectPeerReviewerJobPAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPeerReviewerJobPAOperationCompleted);
            }
            this.InvokeAsync("RejectPeerReviewerJobPA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason}, this.RejectPeerReviewerJobPAOperationCompleted, userState);
        }
        
        private void OnRejectPeerReviewerJobPAOperationCompleted(object arg) {
            if ((this.RejectPeerReviewerJobPACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPeerReviewerJobPACompleted(this, new RejectPeerReviewerJobPACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RejectPeerReviewerJob" +
            "IA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RejectPeerReviewerJobIA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectPeerReviewerJobIA(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            object[] results = this.Invoke("RejectPeerReviewerJobIA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobIAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            this.RejectPeerReviewerJobIAAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, reason, null);
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobIAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason, object userState) {
            if ((this.RejectPeerReviewerJobIAOperationCompleted == null)) {
                this.RejectPeerReviewerJobIAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPeerReviewerJobIAOperationCompleted);
            }
            this.InvokeAsync("RejectPeerReviewerJobIA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason}, this.RejectPeerReviewerJobIAOperationCompleted, userState);
        }
        
        private void OnRejectPeerReviewerJobIAOperationCompleted(object arg) {
            if ((this.RejectPeerReviewerJobIACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPeerReviewerJobIACompleted(this, new RejectPeerReviewerJobIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RejectPeerReviewerJob" +
            "PQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RejectPeerReviewerJobPQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectPeerReviewerJobPQ(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            object[] results = this.Invoke("RejectPeerReviewerJobPQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobPQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            this.RejectPeerReviewerJobPQAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, reason, null);
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobPQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason, object userState) {
            if ((this.RejectPeerReviewerJobPQOperationCompleted == null)) {
                this.RejectPeerReviewerJobPQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPeerReviewerJobPQOperationCompleted);
            }
            this.InvokeAsync("RejectPeerReviewerJobPQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason}, this.RejectPeerReviewerJobPQOperationCompleted, userState);
        }
        
        private void OnRejectPeerReviewerJobPQOperationCompleted(object arg) {
            if ((this.RejectPeerReviewerJobPQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPeerReviewerJobPQCompleted(this, new RejectPeerReviewerJobPQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RejectPeerReviewerJob" +
            "IQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RejectPeerReviewerJobIQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RejectPeerReviewerJobIQ(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            object[] results = this.Invoke("RejectPeerReviewerJobIQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobIQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason) {
            this.RejectPeerReviewerJobIQAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, reason, null);
        }
        
        /// <remarks/>
        public void RejectPeerReviewerJobIQAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, string reason, object userState) {
            if ((this.RejectPeerReviewerJobIQOperationCompleted == null)) {
                this.RejectPeerReviewerJobIQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPeerReviewerJobIQOperationCompleted);
            }
            this.InvokeAsync("RejectPeerReviewerJobIQ", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse,
                        reason}, this.RejectPeerReviewerJobIQOperationCompleted, userState);
        }
        
        private void OnRejectPeerReviewerJobIQOperationCompleted(object arg) {
            if ((this.RejectPeerReviewerJobIQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPeerReviewerJobIQCompleted(this, new RejectPeerReviewerJobIQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AcceptPeerReviewerJob" +
            "CD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AcceptPeerReviewerJobCD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptPeerReviewerJobCD(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptPeerReviewerJobCD", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobCDAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptPeerReviewerJobCDAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobCDAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptPeerReviewerJobCDOperationCompleted == null)) {
                this.AcceptPeerReviewerJobCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPeerReviewerJobCDOperationCompleted);
            }
            this.InvokeAsync("AcceptPeerReviewerJobCD", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptPeerReviewerJobCDOperationCompleted, userState);
        }
        
        private void OnAcceptPeerReviewerJobCDOperationCompleted(object arg) {
            if ((this.AcceptPeerReviewerJobCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPeerReviewerJobCDCompleted(this, new AcceptPeerReviewerJobCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AcceptPeerReviewerJob" +
            "VF", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AcceptPeerReviewerJobVF_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptPeerReviewerJobVF(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptPeerReviewerJobVF", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobVFAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptPeerReviewerJobVFAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobVFAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptPeerReviewerJobVFOperationCompleted == null)) {
                this.AcceptPeerReviewerJobVFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPeerReviewerJobVFOperationCompleted);
            }
            this.InvokeAsync("AcceptPeerReviewerJobVF", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptPeerReviewerJobVFOperationCompleted, userState);
        }
        
        private void OnAcceptPeerReviewerJobVFOperationCompleted(object arg) {
            if ((this.AcceptPeerReviewerJobVFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPeerReviewerJobVFCompleted(this, new AcceptPeerReviewerJobVFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AcceptPeerReviewerJob" +
            "PA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AcceptPeerReviewerJobPA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AcceptPeerReviewerJobPA(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            object[] results = this.Invoke("AcceptPeerReviewerJobPA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobPAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse) {
            this.AcceptPeerReviewerJobPAAsync(allocationCode, resourceCode, acceptresponse, rejectresponse, null);
        }
        
        /// <remarks/>
        public void AcceptPeerReviewerJobPAAsync(int allocationCode, string resourceCode, bool acceptresponse, bool rejectresponse, object userState) {
            if ((this.AcceptPeerReviewerJobPAOperationCompleted == null)) {
                this.AcceptPeerReviewerJobPAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptPeerReviewerJobPAOperationCompleted);
            }
            this.InvokeAsync("AcceptPeerReviewerJobPA", new object[] {
                        allocationCode,
                        resourceCode,
                        acceptresponse,
                        rejectresponse}, this.AcceptPeerReviewerJobPAOperationCompleted, userState);
        }
        
        private void OnAcceptPeerReviewerJobPAOperationCompleted(object arg) {
            if ((this.AcceptPeerReviewerJobPACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptPeerReviewerJobPACompleted(this, new AcceptPeerReviewerJobPACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ProgramAccreditationA" +
            "lert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ProgramAccreditationAlert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProgramAccreditationAlert(int user, string universityCode, string accreditno) {
            object[] results = this.Invoke("ProgramAccreditationAlert", new object[] {
                        user,
                        universityCode,
                        accreditno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProgramAccreditationAlertAsync(int user, string universityCode, string accreditno) {
            this.ProgramAccreditationAlertAsync(user, universityCode, accreditno, null);
        }
        
        /// <remarks/>
        public void ProgramAccreditationAlertAsync(int user, string universityCode, string accreditno, object userState) {
            if ((this.ProgramAccreditationAlertOperationCompleted == null)) {
                this.ProgramAccreditationAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramAccreditationAlertOperationCompleted);
            }
            this.InvokeAsync("ProgramAccreditationAlert", new object[] {
                        user,
                        universityCode,
                        accreditno}, this.ProgramAccreditationAlertOperationCompleted, userState);
        }
        
        private void OnProgramAccreditationAlertOperationCompleted(object arg) {
            if ((this.ProgramAccreditationAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramAccreditationAlertCompleted(this, new ProgramAccreditationAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:GetProgramApplication" +
            "Number", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="GetProgramApplicationNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProgramApplicationNumber(string usercode) {
            object[] results = this.Invoke("GetProgramApplicationNumber", new object[] {
                        usercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgramApplicationNumberAsync(string usercode) {
            this.GetProgramApplicationNumberAsync(usercode, null);
        }
        
        /// <remarks/>
        public void GetProgramApplicationNumberAsync(string usercode, object userState) {
            if ((this.GetProgramApplicationNumberOperationCompleted == null)) {
                this.GetProgramApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgramApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("GetProgramApplicationNumber", new object[] {
                        usercode}, this.GetProgramApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGetProgramApplicationNumberOperationCompleted(object arg) {
            if ((this.GetProgramApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgramApplicationNumberCompleted(this, new GetProgramApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSubmitPeerFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSubmitPeerFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPeerFeedback(string feedbackNo, string peercode, string jobno) {
            object[] results = this.Invoke("FnSubmitPeerFeedback", new object[] {
                        feedbackNo,
                        peercode,
                        jobno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackAsync(string feedbackNo, string peercode, string jobno) {
            this.FnSubmitPeerFeedbackAsync(feedbackNo, peercode, jobno, null);
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackAsync(string feedbackNo, string peercode, string jobno, object userState) {
            if ((this.FnSubmitPeerFeedbackOperationCompleted == null)) {
                this.FnSubmitPeerFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPeerFeedbackOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPeerFeedback", new object[] {
                        feedbackNo,
                        peercode,
                        jobno}, this.FnSubmitPeerFeedbackOperationCompleted, userState);
        }
        
        private void OnFnSubmitPeerFeedbackOperationCompleted(object arg) {
            if ((this.FnSubmitPeerFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPeerFeedbackCompleted(this, new FnSubmitPeerFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSubmitPeerFeedbackL" +
            "ines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSubmitPeerFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitPeerFeedbackLines(string feedbackno, string component, decimal score) {
            object[] results = this.Invoke("FnSubmitPeerFeedbackLines", new object[] {
                        feedbackno,
                        component,
                        score});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackLinesAsync(string feedbackno, string component, decimal score) {
            this.FnSubmitPeerFeedbackLinesAsync(feedbackno, component, score, null);
        }
        
        /// <remarks/>
        public void FnSubmitPeerFeedbackLinesAsync(string feedbackno, string component, decimal score, object userState) {
            if ((this.FnSubmitPeerFeedbackLinesOperationCompleted == null)) {
                this.FnSubmitPeerFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitPeerFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitPeerFeedbackLines", new object[] {
                        feedbackno,
                        component,
                        score}, this.FnSubmitPeerFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnFnSubmitPeerFeedbackLinesOperationCompleted(object arg) {
            if ((this.FnSubmitPeerFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitPeerFeedbackLinesCompleted(this, new FnSubmitPeerFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendCueWorkorderRat" +
            "ingEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendCueWorkorderRatingEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendCueWorkorderRatingEmail(string code) {
            object[] results = this.Invoke("FnSendCueWorkorderRatingEmail", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendCueWorkorderRatingEmailAsync(string code) {
            this.FnSendCueWorkorderRatingEmailAsync(code, null);
        }
        
        /// <remarks/>
        public void FnSendCueWorkorderRatingEmailAsync(string code, object userState) {
            if ((this.FnSendCueWorkorderRatingEmailOperationCompleted == null)) {
                this.FnSendCueWorkorderRatingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendCueWorkorderRatingEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendCueWorkorderRatingEmail", new object[] {
                        code}, this.FnSendCueWorkorderRatingEmailOperationCompleted, userState);
        }
        
        private void OnFnSendCueWorkorderRatingEmailOperationCompleted(object arg) {
            if ((this.FnSendCueWorkorderRatingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendCueWorkorderRatingEmailCompleted(this, new FnSendCueWorkorderRatingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendPeerWorkorderRa" +
            "tingEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendPeerWorkorderRatingEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerWorkorderRatingEmail(string code) {
            object[] results = this.Invoke("FnSendPeerWorkorderRatingEmail", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerWorkorderRatingEmailAsync(string code) {
            this.FnSendPeerWorkorderRatingEmailAsync(code, null);
        }
        
        /// <remarks/>
        public void FnSendPeerWorkorderRatingEmailAsync(string code, object userState) {
            if ((this.FnSendPeerWorkorderRatingEmailOperationCompleted == null)) {
                this.FnSendPeerWorkorderRatingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerWorkorderRatingEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerWorkorderRatingEmail", new object[] {
                        code}, this.FnSendPeerWorkorderRatingEmailOperationCompleted, userState);
        }
        
        private void OnFnSendPeerWorkorderRatingEmailOperationCompleted(object arg) {
            if ((this.FnSendPeerWorkorderRatingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerWorkorderRatingEmailCompleted(this, new FnSendPeerWorkorderRatingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSubmitApplicationCU" +
            "E", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSubmitApplicationCUE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitApplicationCUE(string peerno) {
            object[] results = this.Invoke("FnSubmitApplicationCUE", new object[] {
                        peerno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitApplicationCUEAsync(string peerno) {
            this.FnSubmitApplicationCUEAsync(peerno, null);
        }
        
        /// <remarks/>
        public void FnSubmitApplicationCUEAsync(string peerno, object userState) {
            if ((this.FnSubmitApplicationCUEOperationCompleted == null)) {
                this.FnSubmitApplicationCUEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitApplicationCUEOperationCompleted);
            }
            this.InvokeAsync("FnSubmitApplicationCUE", new object[] {
                        peerno}, this.FnSubmitApplicationCUEOperationCompleted, userState);
        }
        
        private void OnFnSubmitApplicationCUEOperationCompleted(object arg) {
            if ((this.FnSubmitApplicationCUECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitApplicationCUECompleted(this, new FnSubmitApplicationCUECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendCUEWorkOrderApp" +
            "licationEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendCUEWorkOrderApplicationEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendCUEWorkOrderApplicationEmail(string peerno) {
            object[] results = this.Invoke("FnSendCUEWorkOrderApplicationEmail", new object[] {
                        peerno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendCUEWorkOrderApplicationEmailAsync(string peerno) {
            this.FnSendCUEWorkOrderApplicationEmailAsync(peerno, null);
        }
        
        /// <remarks/>
        public void FnSendCUEWorkOrderApplicationEmailAsync(string peerno, object userState) {
            if ((this.FnSendCUEWorkOrderApplicationEmailOperationCompleted == null)) {
                this.FnSendCUEWorkOrderApplicationEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendCUEWorkOrderApplicationEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendCUEWorkOrderApplicationEmail", new object[] {
                        peerno}, this.FnSendCUEWorkOrderApplicationEmailOperationCompleted, userState);
        }
        
        private void OnFnSendCUEWorkOrderApplicationEmailOperationCompleted(object arg) {
            if ((this.FnSendCUEWorkOrderApplicationEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendCUEWorkOrderApplicationEmailCompleted(this, new FnSendCUEWorkOrderApplicationEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendPeerWorkOrderAp" +
            "plicationEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendPeerWorkOrderApplicationEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPeerWorkOrderApplicationEmail(string peerno) {
            object[] results = this.Invoke("FnSendPeerWorkOrderApplicationEmail", new object[] {
                        peerno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPeerWorkOrderApplicationEmailAsync(string peerno) {
            this.FnSendPeerWorkOrderApplicationEmailAsync(peerno, null);
        }
        
        /// <remarks/>
        public void FnSendPeerWorkOrderApplicationEmailAsync(string peerno, object userState) {
            if ((this.FnSendPeerWorkOrderApplicationEmailOperationCompleted == null)) {
                this.FnSendPeerWorkOrderApplicationEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPeerWorkOrderApplicationEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendPeerWorkOrderApplicationEmail", new object[] {
                        peerno}, this.FnSendPeerWorkOrderApplicationEmailOperationCompleted, userState);
        }
        
        private void OnFnSendPeerWorkOrderApplicationEmailOperationCompleted(object arg) {
            if ((this.FnSendPeerWorkOrderApplicationEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPeerWorkOrderApplicationEmailCompleted(this, new FnSendPeerWorkOrderApplicationEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnEditPeerAcademicQua" +
            "lifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnEditPeerAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditPeerAcademicQualifications(string peercode, int lineno, string description, string year, string institution, string area, int duration) {
            object[] results = this.Invoke("FnEditPeerAcademicQualifications", new object[] {
                        peercode,
                        lineno,
                        description,
                        year,
                        institution,
                        area,
                        duration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPeerAcademicQualificationsAsync(string peercode, int lineno, string description, string year, string institution, string area, int duration) {
            this.FnEditPeerAcademicQualificationsAsync(peercode, lineno, description, year, institution, area, duration, null);
        }
        
        /// <remarks/>
        public void FnEditPeerAcademicQualificationsAsync(string peercode, int lineno, string description, string year, string institution, string area, int duration, object userState) {
            if ((this.FnEditPeerAcademicQualificationsOperationCompleted == null)) {
                this.FnEditPeerAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPeerAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnEditPeerAcademicQualifications", new object[] {
                        peercode,
                        lineno,
                        description,
                        year,
                        institution,
                        area,
                        duration}, this.FnEditPeerAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnFnEditPeerAcademicQualificationsOperationCompleted(object arg) {
            if ((this.FnEditPeerAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPeerAcademicQualificationsCompleted(this, new FnEditPeerAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnDeletePeerAcademicQ" +
            "ualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnDeletePeerAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeletePeerAcademicQualifications(int lineno, string peercode) {
            object[] results = this.Invoke("FnDeletePeerAcademicQualifications", new object[] {
                        lineno,
                        peercode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeletePeerAcademicQualificationsAsync(int lineno, string peercode) {
            this.FnDeletePeerAcademicQualificationsAsync(lineno, peercode, null);
        }
        
        /// <remarks/>
        public void FnDeletePeerAcademicQualificationsAsync(int lineno, string peercode, object userState) {
            if ((this.FnDeletePeerAcademicQualificationsOperationCompleted == null)) {
                this.FnDeletePeerAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeletePeerAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnDeletePeerAcademicQualifications", new object[] {
                        lineno,
                        peercode}, this.FnDeletePeerAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnFnDeletePeerAcademicQualificationsOperationCompleted(object arg) {
            if ((this.FnDeletePeerAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeletePeerAcademicQualificationsCompleted(this, new FnDeletePeerAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnEditPeer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnEditPeer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditPeer(string peercode, string name, string phone, string address, string postcode, string email) {
            object[] results = this.Invoke("FnEditPeer", new object[] {
                        peercode,
                        name,
                        phone,
                        address,
                        postcode,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditPeerAsync(string peercode, string name, string phone, string address, string postcode, string email) {
            this.FnEditPeerAsync(peercode, name, phone, address, postcode, email, null);
        }
        
        /// <remarks/>
        public void FnEditPeerAsync(string peercode, string name, string phone, string address, string postcode, string email, object userState) {
            if ((this.FnEditPeerOperationCompleted == null)) {
                this.FnEditPeerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditPeerOperationCompleted);
            }
            this.InvokeAsync("FnEditPeer", new object[] {
                        peercode,
                        name,
                        phone,
                        address,
                        postcode,
                        email}, this.FnEditPeerOperationCompleted, userState);
        }
        
        private void OnFnEditPeerOperationCompleted(object arg) {
            if ((this.FnEditPeerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditPeerCompleted(this, new FnEditPeerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmPayment(string universityCode) {
            this.Invoke("ConfirmPayment", new object[] {
                        universityCode});
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode) {
            this.ConfirmPaymentAsync(universityCode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentAsync(string universityCode, object userState) {
            if ((this.ConfirmPaymentOperationCompleted == null)) {
                this.ConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ConfirmPayment", new object[] {
                        universityCode}, this.ConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentOperationCompleted(object arg) {
            if ((this.ConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnAddCollaborationVer" +
            "ificationEvaluationAndSiteLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnAddCollaborationVerificationEvaluationAndSiteLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddCollaborationVerificationEvaluationAndSiteLines(string evalNo, string applicationNo, string resource, int evalCategory) {
            object[] results = this.Invoke("FnAddCollaborationVerificationEvaluationAndSiteLines", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddCollaborationVerificationEvaluationAndSiteLinesAsync(string evalNo, string applicationNo, string resource, int evalCategory) {
            this.FnAddCollaborationVerificationEvaluationAndSiteLinesAsync(evalNo, applicationNo, resource, evalCategory, null);
        }
        
        /// <remarks/>
        public void FnAddCollaborationVerificationEvaluationAndSiteLinesAsync(string evalNo, string applicationNo, string resource, int evalCategory, object userState) {
            if ((this.FnAddCollaborationVerificationEvaluationAndSiteLinesOperationCompleted == null)) {
                this.FnAddCollaborationVerificationEvaluationAndSiteLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddCollaborationVerificationEvaluationAndSiteLinesOperationCompleted);
            }
            this.InvokeAsync("FnAddCollaborationVerificationEvaluationAndSiteLines", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory}, this.FnAddCollaborationVerificationEvaluationAndSiteLinesOperationCompleted, userState);
        }
        
        private void OnFnAddCollaborationVerificationEvaluationAndSiteLinesOperationCompleted(object arg) {
            if ((this.FnAddCollaborationVerificationEvaluationAndSiteLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddCollaborationVerificationEvaluationAndSiteLinesCompleted(this, new FnAddCollaborationVerificationEvaluationAndSiteLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnAddCollaborationEva" +
            "luationAndSiteLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnAddCollaborationEvaluationAndSiteLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddCollaborationEvaluationAndSiteLines(string evalNo, string applicationNo, string resource, int evalCategory) {
            object[] results = this.Invoke("FnAddCollaborationEvaluationAndSiteLines", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddCollaborationEvaluationAndSiteLinesAsync(string evalNo, string applicationNo, string resource, int evalCategory) {
            this.FnAddCollaborationEvaluationAndSiteLinesAsync(evalNo, applicationNo, resource, evalCategory, null);
        }
        
        /// <remarks/>
        public void FnAddCollaborationEvaluationAndSiteLinesAsync(string evalNo, string applicationNo, string resource, int evalCategory, object userState) {
            if ((this.FnAddCollaborationEvaluationAndSiteLinesOperationCompleted == null)) {
                this.FnAddCollaborationEvaluationAndSiteLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddCollaborationEvaluationAndSiteLinesOperationCompleted);
            }
            this.InvokeAsync("FnAddCollaborationEvaluationAndSiteLines", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory}, this.FnAddCollaborationEvaluationAndSiteLinesOperationCompleted, userState);
        }
        
        private void OnFnAddCollaborationEvaluationAndSiteLinesOperationCompleted(object arg) {
            if ((this.FnAddCollaborationEvaluationAndSiteLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddCollaborationEvaluationAndSiteLinesCompleted(this, new FnAddCollaborationEvaluationAndSiteLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnAddProgrammeEvaluat" +
            "ionAndSiteLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnAddProgrammeEvaluationAndSiteLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddProgrammeEvaluationAndSiteLines(string evalNo, string applicationNo, string resource, int evalCategory) {
            object[] results = this.Invoke("FnAddProgrammeEvaluationAndSiteLines", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddProgrammeEvaluationAndSiteLinesAsync(string evalNo, string applicationNo, string resource, int evalCategory) {
            this.FnAddProgrammeEvaluationAndSiteLinesAsync(evalNo, applicationNo, resource, evalCategory, null);
        }
        
        /// <remarks/>
        public void FnAddProgrammeEvaluationAndSiteLinesAsync(string evalNo, string applicationNo, string resource, int evalCategory, object userState) {
            if ((this.FnAddProgrammeEvaluationAndSiteLinesOperationCompleted == null)) {
                this.FnAddProgrammeEvaluationAndSiteLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddProgrammeEvaluationAndSiteLinesOperationCompleted);
            }
            this.InvokeAsync("FnAddProgrammeEvaluationAndSiteLines", new object[] {
                        evalNo,
                        applicationNo,
                        resource,
                        evalCategory}, this.FnAddProgrammeEvaluationAndSiteLinesOperationCompleted, userState);
        }
        
        private void OnFnAddProgrammeEvaluationAndSiteLinesOperationCompleted(object arg) {
            if ((this.FnAddProgrammeEvaluationAndSiteLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddProgrammeEvaluationAndSiteLinesCompleted(this, new FnAddProgrammeEvaluationAndSiteLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ProgramConfirmPayment" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ProgramConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProgramConfirmPayment(decimal amount) {
            this.Invoke("ProgramConfirmPayment", new object[] {
                        amount});
        }
        
        /// <remarks/>
        public void ProgramConfirmPaymentAsync(decimal amount) {
            this.ProgramConfirmPaymentAsync(amount, null);
        }
        
        /// <remarks/>
        public void ProgramConfirmPaymentAsync(decimal amount, object userState) {
            if ((this.ProgramConfirmPaymentOperationCompleted == null)) {
                this.ProgramConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("ProgramConfirmPayment", new object[] {
                        amount}, this.ProgramConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnProgramConfirmPaymentOperationCompleted(object arg) {
            if ((this.ProgramConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramConfirmPaymentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:Approve", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="Approve_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Approve(string category, string userId, string password, bool action) {
            object[] results = this.Invoke("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action) {
            this.ApproveAsync(category, userId, password, action, null);
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action, object userState) {
            if ((this.ApproveOperationCompleted == null)) {
                this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
            }
            this.InvokeAsync("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action}, this.ApproveOperationCompleted, userState);
        }
        
        private void OnApproveOperationCompleted(object arg) {
            if ((this.ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCompleted(this, new ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddAdminSpace", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddAdminSpace_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddAdminSpace(string category, decimal space, string campus) {
            object[] results = this.Invoke("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus) {
            this.AddAdminSpaceAsync(category, space, campus, null);
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus, object userState) {
            if ((this.AddAdminSpaceOperationCompleted == null)) {
                this.AddAdminSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdminSpaceOperationCompleted);
            }
            this.InvokeAsync("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus}, this.AddAdminSpaceOperationCompleted, userState);
        }
        
        private void OnAddAdminSpaceOperationCompleted(object arg) {
            if ((this.AddAdminSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdminSpaceCompleted(this, new AddAdminSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ApplyForAccreditation" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ApplyForAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForAccreditation(string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string kraPin, string tConstituency, string phonenumber, string sponsor, string userCode, string userPassword) {
            object[] results = this.Invoke("ApplyForAccreditation", new object[] {
                        proposedName,
                        proposedLocation,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        kraPin,
                        tConstituency,
                        phonenumber,
                        sponsor,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string kraPin, string tConstituency, string phonenumber, string sponsor, string userCode, string userPassword) {
            this.ApplyForAccreditationAsync(proposedName, proposedLocation, postaddress, postcode, email, accreditationType, institutionwebsite, kraPin, tConstituency, phonenumber, sponsor, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string proposedName, string proposedLocation, string postaddress, string postcode, string email, string accreditationType, string institutionwebsite, string kraPin, string tConstituency, string phonenumber, string sponsor, string userCode, string userPassword, object userState) {
            if ((this.ApplyForAccreditationOperationCompleted == null)) {
                this.ApplyForAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForAccreditation", new object[] {
                        proposedName,
                        proposedLocation,
                        postaddress,
                        postcode,
                        email,
                        accreditationType,
                        institutionwebsite,
                        kraPin,
                        tConstituency,
                        phonenumber,
                        sponsor,
                        userCode,
                        userPassword}, this.ApplyForAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForAccreditationCompleted(this, new ApplyForAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddVerdictDateCollabo" +
            "ration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddVerdictDateCollaboration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddVerdictDateCollaboration(string evalNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictdate, string peerno, string applicationNo, int apparea) {
            object[] results = this.Invoke("AddVerdictDateCollaboration", new object[] {
                        evalNo,
                        verdictdate,
                        peerno,
                        applicationNo,
                        apparea});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddVerdictDateCollaborationAsync(string evalNo, System.DateTime verdictdate, string peerno, string applicationNo, int apparea) {
            this.AddVerdictDateCollaborationAsync(evalNo, verdictdate, peerno, applicationNo, apparea, null);
        }
        
        /// <remarks/>
        public void AddVerdictDateCollaborationAsync(string evalNo, System.DateTime verdictdate, string peerno, string applicationNo, int apparea, object userState) {
            if ((this.AddVerdictDateCollaborationOperationCompleted == null)) {
                this.AddVerdictDateCollaborationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVerdictDateCollaborationOperationCompleted);
            }
            this.InvokeAsync("AddVerdictDateCollaboration", new object[] {
                        evalNo,
                        verdictdate,
                        peerno,
                        applicationNo,
                        apparea}, this.AddVerdictDateCollaborationOperationCompleted, userState);
        }
        
        private void OnAddVerdictDateCollaborationOperationCompleted(object arg) {
            if ((this.AddVerdictDateCollaborationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVerdictDateCollaborationCompleted(this, new AddVerdictDateCollaborationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddVerdictDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddVerdictDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddVerdictDate(string evalNo, string verdictdate, string peerno, string applicationNo, int apparea) {
            object[] results = this.Invoke("AddVerdictDate", new object[] {
                        evalNo,
                        verdictdate,
                        peerno,
                        applicationNo,
                        apparea});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddVerdictDateAsync(string evalNo, string verdictdate, string peerno, string applicationNo, int apparea) {
            this.AddVerdictDateAsync(evalNo, verdictdate, peerno, applicationNo, apparea, null);
        }
        
        /// <remarks/>
        public void AddVerdictDateAsync(string evalNo, string verdictdate, string peerno, string applicationNo, int apparea, object userState) {
            if ((this.AddVerdictDateOperationCompleted == null)) {
                this.AddVerdictDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVerdictDateOperationCompleted);
            }
            this.InvokeAsync("AddVerdictDate", new object[] {
                        evalNo,
                        verdictdate,
                        peerno,
                        applicationNo,
                        apparea}, this.AddVerdictDateOperationCompleted, userState);
        }
        
        private void OnAddVerdictDateOperationCompleted(object arg) {
            if ((this.AddVerdictDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVerdictDateCompleted(this, new AddVerdictDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:Reopentask", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="Reopentask_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Reopentask(string evalNo) {
            object[] results = this.Invoke("Reopentask", new object[] {
                        evalNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReopentaskAsync(string evalNo) {
            this.ReopentaskAsync(evalNo, null);
        }
        
        /// <remarks/>
        public void ReopentaskAsync(string evalNo, object userState) {
            if ((this.ReopentaskOperationCompleted == null)) {
                this.ReopentaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopentaskOperationCompleted);
            }
            this.InvokeAsync("Reopentask", new object[] {
                        evalNo}, this.ReopentaskOperationCompleted, userState);
        }
        
        private void OnReopentaskOperationCompleted(object arg) {
            if ((this.ReopentaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopentaskCompleted(this, new ReopentaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:ApplyForProgramAccred" +
            "itation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="ApplyForProgramAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForProgramAccreditation(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            object[] results = this.Invoke("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            this.ApplyForProgramAccreditationAsync(userCode, campus, programName, programDomain, programLevel, paymentReference, null);
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference, object userState) {
            if ((this.ApplyForProgramAccreditationOperationCompleted == null)) {
                this.ApplyForProgramAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForProgramAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference}, this.ApplyForProgramAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForProgramAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForProgramAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForProgramAccreditationCompleted(this, new ApplyForProgramAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicStaff(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofCurrentAppointment, 
                    int submissioncategory, 
                    string userName, 
                    string password) {
            object[] results = this.Invoke("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        dateofCurrentAppointment,
                        submissioncategory,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    System.DateTime dateofCurrentAppointment, 
                    int submissioncategory, 
                    string userName, 
                    string password) {
            this.AddAcademicStaffAsync(idNumber, payrollNo, firstName, middleName, lastName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistrationCode, programDomain, rankCode, dateOfFirstAppointment, termsOfService, highestAcademicQualification, campus, dateofCurrentAppointment, submissioncategory, userName, password, null);
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    System.DateTime dateofCurrentAppointment, 
                    int submissioncategory, 
                    string userName, 
                    string password, 
                    object userState) {
            if ((this.AddAcademicStaffOperationCompleted == null)) {
                this.AddAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        dateofCurrentAppointment,
                        submissioncategory,
                        userName,
                        password}, this.AddAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddAcademicStaffOperationCompleted(object arg) {
            if ((this.AddAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicStaffCompleted(this, new AddAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddFinancialSubmissio" +
            "n", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFinancialSubmission(string voteHead, decimal amount, string userCode, string password) {
            object[] results = this.Invoke("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password) {
            this.AddFinancialSubmissionAsync(voteHead, amount, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password, object userState) {
            if ((this.AddFinancialSubmissionOperationCompleted == null)) {
                this.AddFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password}, this.AddFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnAddFinancialSubmissionOperationCompleted(object arg) {
            if ((this.AddFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFinancialSubmissionCompleted(this, new AddFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DeleteFinancialSubmis" +
            "sion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DeleteFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFinancialSubmission(string voteHead, string userCode, string password) {
            object[] results = this.Invoke("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password) {
            this.DeleteFinancialSubmissionAsync(voteHead, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password, object userState) {
            if ((this.DeleteFinancialSubmissionOperationCompleted == null)) {
                this.DeleteFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password}, this.DeleteFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnDeleteFinancialSubmissionOperationCompleted(object arg) {
            if ((this.DeleteFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFinancialSubmissionCompleted(this, new DeleteFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:RegisterPeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="RegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RegisterPeerReviewer(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.RegisterPeerReviewerAsync(name, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.RegisterPeerReviewerOperationCompleted == null)) {
                this.RegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.RegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.RegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterPeerReviewerCompleted(this, new RegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:UpdatePeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="UpdatePeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewer(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("UpdatePeerReviewer", new object[] {
                        name,
                        reviewerCode,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerAsync(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title) {
            this.UpdatePeerReviewerAsync(name, reviewerCode, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerAsync(string name, string reviewerCode, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string highestAcademicQualification, string title, object userState) {
            if ((this.UpdatePeerReviewerOperationCompleted == null)) {
                this.UpdatePeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewer", new object[] {
                        name,
                        reviewerCode,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        highestAcademicQualification,
                        title}, this.UpdatePeerReviewerOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerCompleted(this, new UpdatePeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:UpdatePeerReviewerPas" +
            "sword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="UpdatePeerReviewerPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewerPassword(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            this.UpdatePeerReviewerPasswordAsync(vendorNumber, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.UpdatePeerReviewerPasswordOperationCompleted == null)) {
                this.UpdatePeerReviewerPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.UpdatePeerReviewerPasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerPasswordOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerPasswordCompleted(this, new UpdatePeerReviewerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddPeerAcademicQualif" +
            "ications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddPeerAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerAcademicQualifications(string vendorNo, string description, string yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country) {
            object[] results = this.Invoke("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string description, string yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country) {
            this.AddPeerAcademicQualificationsAsync(vendorNo, description, yearObtained, institution, areaOfSpecialization, durationOfStudy, country, null);
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string description, string yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, string country, object userState) {
            if ((this.AddPeerAcademicQualificationsOperationCompleted == null)) {
                this.AddPeerAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy,
                        country}, this.AddPeerAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddPeerAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddPeerAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerAcademicQualificationsCompleted(this, new AddPeerAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:AddPeerEmploymentReco" +
            "rd", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="AddPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerEmploymentRecord(string vendorNo, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber, string employeremail, decimal yearsworked, bool currentplace) {
            object[] results = this.Invoke("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson,
                        address,
                        email,
                        phonenumber,
                        employeremail,
                        yearsworked,
                        currentplace});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber, string employeremail, decimal yearsworked, bool currentplace) {
            this.AddPeerEmploymentRecordAsync(vendorNo, employer, postion, dateFrom, dateTo, contactPerson, address, email, phonenumber, employeremail, yearsworked, currentplace, null);
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, string address, string email, string phonenumber, string employeremail, decimal yearsworked, bool currentplace, object userState) {
            if ((this.AddPeerEmploymentRecordOperationCompleted == null)) {
                this.AddPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson,
                        address,
                        email,
                        phonenumber,
                        employeremail,
                        yearsworked,
                        currentplace}, this.AddPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnAddPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.AddPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerEmploymentRecordCompleted(this, new AddPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:EditPeerEmploymentRec" +
            "ord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="EditPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPeerEmploymentRecord(string vendorNo, int recordCode, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson) {
            object[] results = this.Invoke("EditPeerEmploymentRecord", new object[] {
                        vendorNo,
                        recordCode,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPeerEmploymentRecordAsync(string vendorNo, int recordCode, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson) {
            this.EditPeerEmploymentRecordAsync(vendorNo, recordCode, employer, postion, dateFrom, dateTo, contactPerson, null);
        }
        
        /// <remarks/>
        public void EditPeerEmploymentRecordAsync(string vendorNo, int recordCode, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, object userState) {
            if ((this.EditPeerEmploymentRecordOperationCompleted == null)) {
                this.EditPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("EditPeerEmploymentRecord", new object[] {
                        vendorNo,
                        recordCode,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson}, this.EditPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnEditPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.EditPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPeerEmploymentRecordCompleted(this, new EditPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:FnSendEmailPeerAccoun" +
            "tCreation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="FnSendEmailPeerAccountCreation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendEmailPeerAccountCreation(string contactno) {
            object[] results = this.Invoke("FnSendEmailPeerAccountCreation", new object[] {
                        contactno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendEmailPeerAccountCreationAsync(string contactno) {
            this.FnSendEmailPeerAccountCreationAsync(contactno, null);
        }
        
        /// <remarks/>
        public void FnSendEmailPeerAccountCreationAsync(string contactno, object userState) {
            if ((this.FnSendEmailPeerAccountCreationOperationCompleted == null)) {
                this.FnSendEmailPeerAccountCreationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendEmailPeerAccountCreationOperationCompleted);
            }
            this.InvokeAsync("FnSendEmailPeerAccountCreation", new object[] {
                        contactno}, this.FnSendEmailPeerAccountCreationOperationCompleted, userState);
        }
        
        private void OnFnSendEmailPeerAccountCreationOperationCompleted(object arg) {
            if ((this.FnSendEmailPeerAccountCreationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendEmailPeerAccountCreationCompleted(this, new FnSendEmailPeerAccountCreationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal:DeletePeerEmploymentR" +
            "ecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", ResponseElementName="DeletePeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PeerReviewersPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePeerEmploymentRecord(string vendorNo, int recordCode) {
            object[] results = this.Invoke("DeletePeerEmploymentRecord", new object[] {
                        vendorNo,
                        recordCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePeerEmploymentRecordAsync(string vendorNo, int recordCode) {
            this.DeletePeerEmploymentRecordAsync(vendorNo, recordCode, null);
        }
        
        /// <remarks/>
        public void DeletePeerEmploymentRecordAsync(string vendorNo, int recordCode, object userState) {
            if ((this.DeletePeerEmploymentRecordOperationCompleted == null)) {
                this.DeletePeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("DeletePeerEmploymentRecord", new object[] {
                        vendorNo,
                        recordCode}, this.DeletePeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnDeletePeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.DeletePeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePeerEmploymentRecordCompleted(this, new DeletePeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertTechnicalCommentsCompletedEventHandler(object sender, FnInsertTechnicalCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertTechnicalCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertTechnicalCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertTechnicalCommentsLinesCompletedEventHandler(object sender, FnInsertTechnicalCommentsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertTechnicalCommentsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertTechnicalCommentsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPeerAccountCreationsDocsCompletedEventHandler(object sender, FnInsertPeerAccountCreationsDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPeerAccountCreationsDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPeerAccountCreationsDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertAuditExitReportCompletedEventHandler(object sender, FnInsertAuditExitReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertAuditExitReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertAuditExitReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertAuditLinesCompletedEventHandler(object sender, FnInsertAuditLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertAuditLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertAuditLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitEmailAuditEvaluationCompletedEventHandler(object sender, FnSubmitEmailAuditEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitEmailAuditEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitEmailAuditEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendCueAuditRatingEmailCompletedEventHandler(object sender, FnSendCueAuditRatingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendCueAuditRatingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendCueAuditRatingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPeerAuditRatingEmailCompletedEventHandler(object sender, FnSendPeerAuditRatingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerAuditRatingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerAuditRatingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendTechnicalInspectionVouchersToCUECompletedEventHandler(object sender, FnSendTechnicalInspectionVouchersToCUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendTechnicalInspectionVouchersToCUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendTechnicalInspectionVouchersToCUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStaffClaimApprovalCompletedEventHandler(object sender, SendStaffClaimApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStaffClaimApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStaffClaimApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimCompletedEventHandler(object sender, CreateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStaffClaimLineCompletedEventHandler(object sender, DeleteStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimLineCompletedEventHandler(object sender, CreateStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditStaffClaimLineCompletedEventHandler(object sender, EditStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetCollaborationPeerCommentsCompletedEventHandler(object sender, FnGetCollaborationPeerCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCollaborationPeerCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCollaborationPeerCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPAPeerCommentsCompletedEventHandler(object sender, FnGetPAPeerCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPAPeerCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPAPeerCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateAssReportCompletedEventHandler(object sender, FnGenerateAssReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateAssReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateAssReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPAPeerComponentsCompletedEventHandler(object sender, FnGetPAPeerComponentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPAPeerComponentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPAPeerComponentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPAPeerComponentsEachCompletedEventHandler(object sender, FnGetPAPeerComponentsEachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPAPeerComponentsEachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPAPeerComponentsEachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPAPeerCommentsEachCompletedEventHandler(object sender, FnGetPAPeerCommentsEachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPAPeerCommentsEachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPAPeerCommentsEachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateSiteAssReportCompletedEventHandler(object sender, FnGenerateSiteAssReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateSiteAssReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateSiteAssReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPASiteComponentCommentsCompletedEventHandler(object sender, FnGetPASiteComponentCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPASiteComponentCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPASiteComponentCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveCollaborationSiteComponentCommentsCompletedEventHandler(object sender, FnSaveCollaborationSiteComponentCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveCollaborationSiteComponentCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveCollaborationSiteComponentCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveOverallCommentCompletedEventHandler(object sender, FnSaveOverallCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveOverallCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveOverallCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveOverallCommentCurriculumCompletedEventHandler(object sender, FnSaveOverallCommentCurriculumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveOverallCommentCurriculumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveOverallCommentCurriculumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetCollaborationSiteComponentCommentsCompletedEventHandler(object sender, FnGetCollaborationSiteComponentCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCollaborationSiteComponentCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCollaborationSiteComponentCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSavePASiteComponentCommentsCompletedEventHandler(object sender, FnSavePASiteComponentCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSavePASiteComponentCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSavePASiteComponentCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DataClerkEmailRequestCompletedEventHandler(object sender, DataClerkEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataClerkEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataClerkEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DataCancelClerkEmailRequestCompletedEventHandler(object sender, DataCancelClerkEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataCancelClerkEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataCancelClerkEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DvcApprovalEmailRequestCompletedEventHandler(object sender, DvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VcApprovalEmailRequestCompletedEventHandler(object sender, VcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DataclerkfinalvcApprovalEmailRequestCompletedEventHandler(object sender, DataclerkfinalvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataclerkfinalvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataclerkfinalvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DvcfinalvcApprovalEmailRequestCompletedEventHandler(object sender, DvcfinalvcApprovalEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DvcfinalvcApprovalEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DvcfinalvcApprovalEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccountCreationEmailRequestCompletedEventHandler(object sender, AccountCreationEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountCreationEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountCreationEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUseraccountCreationEmailRequestCompletedEventHandler(object sender, FnUseraccountCreationEmailRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUseraccountCreationEmailRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUseraccountCreationEmailRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUserHelpEmaiRequestCompletedEventHandler(object sender, FnUserHelpEmaiRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUserHelpEmaiRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUserHelpEmaiRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApprovalStatusDataCollectionCompletedEventHandler(object sender, ApprovalStatusDataCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApprovalStatusDataCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApprovalStatusDataCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnuseraccountcreationCompletedEventHandler(object sender, FnuseraccountcreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnuseraccountcreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnuseraccountcreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PortalResetPasswordCompletedEventHandler(object sender, PortalResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PortalResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PortalResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProgrammeFeedbackVoucherCompletedEventHandler(object sender, FnGenerateProgrammeFeedbackVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProgrammeFeedbackVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProgrammeFeedbackVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateProgrammeEvaluationTooolCompletedEventHandler(object sender, FnGenerateProgrammeEvaluationTooolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateProgrammeEvaluationTooolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateProgrammeEvaluationTooolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewWorkOrderEmailAlertCompletedEventHandler(object sender, FnNewWorkOrderEmailAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewWorkOrderEmailAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewWorkOrderEmailAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAccreditationPaymentsAlertsCompletedEventHandler(object sender, FnAccreditationPaymentsAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAccreditationPaymentsAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAccreditationPaymentsAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAccreditationAlertsToUniversityCompletedEventHandler(object sender, FnAccreditationAlertsToUniversityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAccreditationAlertsToUniversityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAccreditationAlertsToUniversityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateExitReportCompletedEventHandler(object sender, FnGenerateExitReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateExitReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateExitReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitUniversityAccreditationFeedbackCompletedEventHandler(object sender, FnSubmitUniversityAccreditationFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitUniversityAccreditationFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitUniversityAccreditationFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitInstitutionAccreditationCompletedEventHandler(object sender, FnSubmitInstitutionAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitInstitutionAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitInstitutionAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUniversityFeedbackCommentsEmailAlertCompletedEventHandler(object sender, FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUniversityFeedbackCommentsEmailAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptPeerReviewerJobIACompletedEventHandler(object sender, AcceptPeerReviewerJobIACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPeerReviewerJobIACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPeerReviewerJobIACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptPeerReviewerJobPQCompletedEventHandler(object sender, AcceptPeerReviewerJobPQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPeerReviewerJobPQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPeerReviewerJobPQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptPeerReviewerJobIQCompletedEventHandler(object sender, AcceptPeerReviewerJobIQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPeerReviewerJobIQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPeerReviewerJobIQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPeerReviewersEvaluation1CompletedEventHandler(object sender, AddPeerReviewersEvaluation1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerReviewersEvaluation1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerReviewersEvaluation1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProgrammeAccCommentsCompletedEventHandler(object sender, AddProgrammeAccCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgrammeAccCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgrammeAccCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCollaborationCommentsCompletedEventHandler(object sender, AddCollaborationCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCollaborationCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCollaborationCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditPeerReviewersEvaluationCompletedEventHandler(object sender, FnEditPeerReviewersEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPeerReviewersEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPeerReviewersEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPeerApprovalRequestCompletedEventHandler(object sender, FnSendPeerApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRegisterPeerReviewerCompletedEventHandler(object sender, FnRegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetVendornNumberCompletedEventHandler(object sender, FnGetVendornNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetVendornNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetVendornNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBlogCompletedEventHandler(object sender, FnInsertBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBlogReplyCompletedEventHandler(object sender, FnInsertBlogReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendApprovalRequestCompletedEventHandler(object sender, SendApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendProgramApprovalRequestCompletedEventHandler(object sender, SendProgramApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendProgramApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendProgramApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveRejectRequestCompletedEventHandler(object sender, ApproveRejectRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveRejectProgramRequestCompletedEventHandler(object sender, ApproveRejectProgramRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectProgramRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectProgramRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelApprovalProgramRequestCompletedEventHandler(object sender, CancelApprovalProgramRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalProgramRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalProgramRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelApprovalRequestCompletedEventHandler(object sender, CancelApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddEvaluationHeaderCommentsCompletedEventHandler(object sender, AddEvaluationHeaderCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEvaluationHeaderCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEvaluationHeaderCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSARCommitteesComposition1CompletedEventHandler(object sender, AddSARCommitteesComposition1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesComposition1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesComposition1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSARCommitteesCompositionCompletedEventHandler(object sender, AddSARCommitteesCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RejectPeerReviewerJobVRCompletedEventHandler(object sender, RejectPeerReviewerJobVRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectPeerReviewerJobVRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectPeerReviewerJobVRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RejectPeerReviewerJobCDCompletedEventHandler(object sender, RejectPeerReviewerJobCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectPeerReviewerJobCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectPeerReviewerJobCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RejectPeerReviewerJobPACompletedEventHandler(object sender, RejectPeerReviewerJobPACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectPeerReviewerJobPACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectPeerReviewerJobPACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RejectPeerReviewerJobIACompletedEventHandler(object sender, RejectPeerReviewerJobIACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectPeerReviewerJobIACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectPeerReviewerJobIACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RejectPeerReviewerJobPQCompletedEventHandler(object sender, RejectPeerReviewerJobPQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectPeerReviewerJobPQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectPeerReviewerJobPQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RejectPeerReviewerJobIQCompletedEventHandler(object sender, RejectPeerReviewerJobIQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectPeerReviewerJobIQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectPeerReviewerJobIQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptPeerReviewerJobCDCompletedEventHandler(object sender, AcceptPeerReviewerJobCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPeerReviewerJobCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPeerReviewerJobCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptPeerReviewerJobVFCompletedEventHandler(object sender, AcceptPeerReviewerJobVFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPeerReviewerJobVFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPeerReviewerJobVFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AcceptPeerReviewerJobPACompletedEventHandler(object sender, AcceptPeerReviewerJobPACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptPeerReviewerJobPACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptPeerReviewerJobPACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ProgramAccreditationAlertCompletedEventHandler(object sender, ProgramAccreditationAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgramAccreditationAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgramAccreditationAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetProgramApplicationNumberCompletedEventHandler(object sender, GetProgramApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgramApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgramApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPeerFeedbackCompletedEventHandler(object sender, FnSubmitPeerFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPeerFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPeerFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitPeerFeedbackLinesCompletedEventHandler(object sender, FnSubmitPeerFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitPeerFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitPeerFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendCueWorkorderRatingEmailCompletedEventHandler(object sender, FnSendCueWorkorderRatingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendCueWorkorderRatingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendCueWorkorderRatingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPeerWorkorderRatingEmailCompletedEventHandler(object sender, FnSendPeerWorkorderRatingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerWorkorderRatingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerWorkorderRatingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitApplicationCUECompletedEventHandler(object sender, FnSubmitApplicationCUECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitApplicationCUECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitApplicationCUECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendCUEWorkOrderApplicationEmailCompletedEventHandler(object sender, FnSendCUEWorkOrderApplicationEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendCUEWorkOrderApplicationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendCUEWorkOrderApplicationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPeerWorkOrderApplicationEmailCompletedEventHandler(object sender, FnSendPeerWorkOrderApplicationEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPeerWorkOrderApplicationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPeerWorkOrderApplicationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditPeerAcademicQualificationsCompletedEventHandler(object sender, FnEditPeerAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPeerAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPeerAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeletePeerAcademicQualificationsCompletedEventHandler(object sender, FnDeletePeerAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeletePeerAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeletePeerAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditPeerCompletedEventHandler(object sender, FnEditPeerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditPeerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditPeerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddCollaborationVerificationEvaluationAndSiteLinesCompletedEventHandler(object sender, FnAddCollaborationVerificationEvaluationAndSiteLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddCollaborationVerificationEvaluationAndSiteLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddCollaborationVerificationEvaluationAndSiteLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddCollaborationEvaluationAndSiteLinesCompletedEventHandler(object sender, FnAddCollaborationEvaluationAndSiteLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddCollaborationEvaluationAndSiteLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddCollaborationEvaluationAndSiteLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddProgrammeEvaluationAndSiteLinesCompletedEventHandler(object sender, FnAddProgrammeEvaluationAndSiteLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddProgrammeEvaluationAndSiteLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddProgrammeEvaluationAndSiteLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ProgramConfirmPaymentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApproveCompletedEventHandler(object sender, ApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAdminSpaceCompletedEventHandler(object sender, AddAdminSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdminSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdminSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyForAccreditationCompletedEventHandler(object sender, ApplyForAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddVerdictDateCollaborationCompletedEventHandler(object sender, AddVerdictDateCollaborationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVerdictDateCollaborationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVerdictDateCollaborationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddVerdictDateCompletedEventHandler(object sender, AddVerdictDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVerdictDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVerdictDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReopentaskCompletedEventHandler(object sender, ReopentaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReopentaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReopentaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyForProgramAccreditationCompletedEventHandler(object sender, ApplyForProgramAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForProgramAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForProgramAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicStaffCompletedEventHandler(object sender, AddAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFinancialSubmissionCompletedEventHandler(object sender, AddFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFinancialSubmissionCompletedEventHandler(object sender, DeleteFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterPeerReviewerCompletedEventHandler(object sender, RegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePeerReviewerCompletedEventHandler(object sender, UpdatePeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePeerReviewerPasswordCompletedEventHandler(object sender, UpdatePeerReviewerPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPeerAcademicQualificationsCompletedEventHandler(object sender, AddPeerAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPeerEmploymentRecordCompletedEventHandler(object sender, AddPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditPeerEmploymentRecordCompletedEventHandler(object sender, EditPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendEmailPeerAccountCreationCompletedEventHandler(object sender, FnSendEmailPeerAccountCreationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendEmailPeerAccountCreationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendEmailPeerAccountCreationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeletePeerEmploymentRecordCompletedEventHandler(object sender, DeletePeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591